/* soapH.h
   Generated by gSOAP 2.8.14 from rdlite.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin(soap), soap_serialize_byte(soap, data), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_short
#define SOAP_TYPE_short (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_short(struct soap*, short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_short(struct soap*, const char*, int, const short *, const char*);
SOAP_FMAC3 short * SOAP_FMAC4 soap_in_short(struct soap*, const char*, short *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_short(struct soap*, const short *, const char*, const char*);

#ifndef soap_write_short
#define soap_write_short(soap, data) ( soap_begin(soap), soap_serialize_short(soap, data), soap_begin_send(soap) || soap_put_short(soap, data, "short", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 short * SOAP_FMAC4 soap_get_short(struct soap*, short *, const char*, const char*);

#ifndef soap_read_short
#define soap_read_short(soap, data) ( soap_begin_recv(soap) || !soap_get_short(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin(soap), soap_serialize_int(soap, data), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_LONG64
#define soap_write_LONG64(soap, data) ( soap_begin(soap), soap_serialize_LONG64(soap, data), soap_begin_send(soap) || soap_put_LONG64(soap, data, "long", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_LONG64
#define soap_read_LONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_LONG64(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (10)
#endif

#define soap_default_xsd__unsignedByte(soap, a) soap_default_unsignedByte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_xsd__unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_xsd__unsignedByte
#define soap_write_xsd__unsignedByte(soap, data) ( soap_begin(soap), soap_serialize_xsd__unsignedByte(soap, data), soap_begin_send(soap) || soap_put_xsd__unsignedByte(soap, data, "xsd:unsignedByte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_xsd__unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_xsd__unsignedByte
#define soap_read_xsd__unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_begin(soap), soap_serialize_unsignedByte(soap, data), soap_begin_send(soap) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedShort
#define SOAP_TYPE_unsignedShort (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedShort(struct soap*, unsigned short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedShort(struct soap*, const char*, int, const unsigned short *, const char*);
SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_in_unsignedShort(struct soap*, const char*, unsigned short *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedShort(struct soap*, const unsigned short *, const char*, const char*);

#ifndef soap_write_unsignedShort
#define soap_write_unsignedShort(soap, data) ( soap_begin(soap), soap_serialize_unsignedShort(soap, data), soap_begin_send(soap) || soap_put_unsignedShort(soap, data, "unsignedShort", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_get_unsignedShort(struct soap*, unsigned short *, const char*, const char*);

#ifndef soap_read_unsignedShort
#define soap_read_unsignedShort(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedShort(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_begin(soap), soap_serialize_unsignedInt(soap, data), soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin(soap), soap_serialize_std__string(soap, data), soap_begin_send(soap) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__QueryResponse
#define SOAP_TYPE__ns1__QueryResponse (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__QueryResponse(struct soap*, const char*, int, const _ns1__QueryResponse *, const char*);
SOAP_FMAC3 _ns1__QueryResponse * SOAP_FMAC4 soap_in__ns1__QueryResponse(struct soap*, const char*, _ns1__QueryResponse *, const char*);

#ifndef soap_write__ns1__QueryResponse
#define soap_write__ns1__QueryResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:QueryResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__QueryResponse * SOAP_FMAC4 soap_get__ns1__QueryResponse(struct soap*, _ns1__QueryResponse *, const char*, const char*);

#ifndef soap_read__ns1__QueryResponse
#define soap_read__ns1__QueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__QueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__QueryResponse * SOAP_FMAC2 soap_instantiate__ns1__QueryResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__QueryResponse * soap_new__ns1__QueryResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__QueryResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__QueryResponse * soap_new_req__ns1__QueryResponse(struct soap *soap, ns1__TagValueArray *result) { _ns1__QueryResponse *_p = soap_instantiate__ns1__QueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryResponse::result = result; } return _p; }

inline _ns1__QueryResponse * soap_new_set__ns1__QueryResponse(struct soap *soap, ns1__TagValueArray *result) { _ns1__QueryResponse *_p = soap_instantiate__ns1__QueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__QueryResponse::result = result; } return _p; }

inline void soap_delete__ns1__QueryResponse(struct soap *soap, _ns1__QueryResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__QueryResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Query
#define SOAP_TYPE__ns1__Query (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Query(struct soap*, const char*, int, const _ns1__Query *, const char*);
SOAP_FMAC3 _ns1__Query * SOAP_FMAC4 soap_in__ns1__Query(struct soap*, const char*, _ns1__Query *, const char*);

#ifndef soap_write__ns1__Query
#define soap_write__ns1__Query(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Query", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Query * SOAP_FMAC4 soap_get__ns1__Query(struct soap*, _ns1__Query *, const char*, const char*);

#ifndef soap_read__ns1__Query
#define soap_read__ns1__Query(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Query(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__Query * SOAP_FMAC2 soap_instantiate__ns1__Query(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Query * soap_new__ns1__Query(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Query(soap, n, NULL, NULL, NULL); }

inline _ns1__Query * soap_new_req__ns1__Query(struct soap *soap, unsigned char stationId, ns1__TagIdArray *tagId, unsigned char valueType, LONG64 beginTime, LONG64 endTime, unsigned short count) { _ns1__Query *_p = soap_instantiate__ns1__Query(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Query::stationId = stationId; _p->_ns1__Query::tagId = tagId; _p->_ns1__Query::valueType = valueType; _p->_ns1__Query::beginTime = beginTime; _p->_ns1__Query::endTime = endTime; _p->_ns1__Query::count = count; } return _p; }

inline _ns1__Query * soap_new_set__ns1__Query(struct soap *soap, unsigned char stationId, ns1__TagIdArray *tagId, unsigned char valueType, LONG64 beginTime, LONG64 endTime, unsigned short count) { _ns1__Query *_p = soap_instantiate__ns1__Query(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Query::stationId = stationId; _p->_ns1__Query::tagId = tagId; _p->_ns1__Query::valueType = valueType; _p->_ns1__Query::beginTime = beginTime; _p->_ns1__Query::endTime = endTime; _p->_ns1__Query::count = count; } return _p; }

inline void soap_delete__ns1__Query(struct soap *soap, _ns1__Query *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Query(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__ReadResponse
#define SOAP_TYPE__ns1__ReadResponse (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__ReadResponse(struct soap*, const char*, int, const _ns1__ReadResponse *, const char*);
SOAP_FMAC3 _ns1__ReadResponse * SOAP_FMAC4 soap_in__ns1__ReadResponse(struct soap*, const char*, _ns1__ReadResponse *, const char*);

#ifndef soap_write__ns1__ReadResponse
#define soap_write__ns1__ReadResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:ReadResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__ReadResponse * SOAP_FMAC4 soap_get__ns1__ReadResponse(struct soap*, _ns1__ReadResponse *, const char*, const char*);

#ifndef soap_read__ns1__ReadResponse
#define soap_read__ns1__ReadResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__ReadResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__ReadResponse * SOAP_FMAC2 soap_instantiate__ns1__ReadResponse(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__ReadResponse * soap_new__ns1__ReadResponse(struct soap *soap, int n = -1) { return soap_instantiate__ns1__ReadResponse(soap, n, NULL, NULL, NULL); }

inline _ns1__ReadResponse * soap_new_req__ns1__ReadResponse(struct soap *soap, ns1__TagValueArray *result) { _ns1__ReadResponse *_p = soap_instantiate__ns1__ReadResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__ReadResponse::result = result; } return _p; }

inline _ns1__ReadResponse * soap_new_set__ns1__ReadResponse(struct soap *soap, ns1__TagValueArray *result) { _ns1__ReadResponse *_p = soap_instantiate__ns1__ReadResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__ReadResponse::result = result; } return _p; }

inline void soap_delete__ns1__ReadResponse(struct soap *soap, _ns1__ReadResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__ReadResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__ns1__Read
#define SOAP_TYPE__ns1__Read (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__ns1__Read(struct soap*, const char*, int, const _ns1__Read *, const char*);
SOAP_FMAC3 _ns1__Read * SOAP_FMAC4 soap_in__ns1__Read(struct soap*, const char*, _ns1__Read *, const char*);

#ifndef soap_write__ns1__Read
#define soap_write__ns1__Read(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:Read", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Read * SOAP_FMAC4 soap_get__ns1__Read(struct soap*, _ns1__Read *, const char*, const char*);

#ifndef soap_read__ns1__Read
#define soap_read__ns1__Read(soap, data) ( soap_begin_recv(soap) || !soap_get__ns1__Read(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 _ns1__Read * SOAP_FMAC2 soap_instantiate__ns1__Read(struct soap*, int, const char*, const char*, size_t*);

inline _ns1__Read * soap_new__ns1__Read(struct soap *soap, int n = -1) { return soap_instantiate__ns1__Read(soap, n, NULL, NULL, NULL); }

inline _ns1__Read * soap_new_req__ns1__Read(struct soap *soap, unsigned char stationId, ns1__TagIdArray *tagId) { _ns1__Read *_p = soap_instantiate__ns1__Read(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Read::stationId = stationId; _p->_ns1__Read::tagId = tagId; } return _p; }

inline _ns1__Read * soap_new_set__ns1__Read(struct soap *soap, unsigned char stationId, ns1__TagIdArray *tagId) { _ns1__Read *_p = soap_instantiate__ns1__Read(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->_ns1__Read::stationId = stationId; _p->_ns1__Read::tagId = tagId; } return _p; }

inline void soap_delete__ns1__Read(struct soap *soap, _ns1__Read *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy__ns1__Read(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__TagIdArray
#define SOAP_TYPE_ns1__TagIdArray (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__TagIdArray(struct soap*, const char*, int, const ns1__TagIdArray *, const char*);
SOAP_FMAC3 ns1__TagIdArray * SOAP_FMAC4 soap_in_ns1__TagIdArray(struct soap*, const char*, ns1__TagIdArray *, const char*);

#ifndef soap_write_ns1__TagIdArray
#define soap_write_ns1__TagIdArray(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:TagIdArray", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__TagIdArray * SOAP_FMAC4 soap_get_ns1__TagIdArray(struct soap*, ns1__TagIdArray *, const char*, const char*);

#ifndef soap_read_ns1__TagIdArray
#define soap_read_ns1__TagIdArray(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__TagIdArray(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__TagIdArray * SOAP_FMAC2 soap_instantiate_ns1__TagIdArray(struct soap*, int, const char*, const char*, size_t*);

inline ns1__TagIdArray * soap_new_ns1__TagIdArray(struct soap *soap, int n = -1) { return soap_instantiate_ns1__TagIdArray(soap, n, NULL, NULL, NULL); }

inline ns1__TagIdArray * soap_new_req_ns1__TagIdArray(struct soap *soap) { ns1__TagIdArray *_p = soap_instantiate_ns1__TagIdArray(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns1__TagIdArray * soap_new_set_ns1__TagIdArray(struct soap *soap, std::vector<int >& item) { ns1__TagIdArray *_p = soap_instantiate_ns1__TagIdArray(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__TagIdArray::item = item; } return _p; }

inline void soap_delete_ns1__TagIdArray(struct soap *soap, ns1__TagIdArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__TagIdArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__TagValueArray
#define SOAP_TYPE_ns1__TagValueArray (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__TagValueArray(struct soap*, const char*, int, const ns1__TagValueArray *, const char*);
SOAP_FMAC3 ns1__TagValueArray * SOAP_FMAC4 soap_in_ns1__TagValueArray(struct soap*, const char*, ns1__TagValueArray *, const char*);

#ifndef soap_write_ns1__TagValueArray
#define soap_write_ns1__TagValueArray(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:TagValueArray", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__TagValueArray * SOAP_FMAC4 soap_get_ns1__TagValueArray(struct soap*, ns1__TagValueArray *, const char*, const char*);

#ifndef soap_read_ns1__TagValueArray
#define soap_read_ns1__TagValueArray(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__TagValueArray(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__TagValueArray * SOAP_FMAC2 soap_instantiate_ns1__TagValueArray(struct soap*, int, const char*, const char*, size_t*);

inline ns1__TagValueArray * soap_new_ns1__TagValueArray(struct soap *soap, int n = -1) { return soap_instantiate_ns1__TagValueArray(soap, n, NULL, NULL, NULL); }

inline ns1__TagValueArray * soap_new_req_ns1__TagValueArray(struct soap *soap, int error) { ns1__TagValueArray *_p = soap_instantiate_ns1__TagValueArray(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__TagValueArray::error = error; } return _p; }

inline ns1__TagValueArray * soap_new_set_ns1__TagValueArray(struct soap *soap, int error, std::vector<ns1__TagValue * >& item) { ns1__TagValueArray *_p = soap_instantiate_ns1__TagValueArray(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__TagValueArray::error = error; _p->ns1__TagValueArray::item = item; } return _p; }

inline void soap_delete_ns1__TagValueArray(struct soap *soap, ns1__TagValueArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__TagValueArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__TagValue
#define SOAP_TYPE_ns1__TagValue (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__TagValue(struct soap*, const char*, int, const ns1__TagValue *, const char*);
SOAP_FMAC3 ns1__TagValue * SOAP_FMAC4 soap_in_ns1__TagValue(struct soap*, const char*, ns1__TagValue *, const char*);

#ifndef soap_write_ns1__TagValue
#define soap_write_ns1__TagValue(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns1:TagValue", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__TagValue * SOAP_FMAC4 soap_get_ns1__TagValue(struct soap*, ns1__TagValue *, const char*, const char*);

#ifndef soap_read_ns1__TagValue
#define soap_read_ns1__TagValue(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__TagValue(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns1__TagValue * SOAP_FMAC2 soap_instantiate_ns1__TagValue(struct soap*, int, const char*, const char*, size_t*);

inline ns1__TagValue * soap_new_ns1__TagValue(struct soap *soap, int n = -1) { return soap_instantiate_ns1__TagValue(soap, n, NULL, NULL, NULL); }

inline ns1__TagValue * soap_new_req_ns1__TagValue(struct soap *soap, unsigned int id, LONG64 time) { ns1__TagValue *_p = soap_instantiate_ns1__TagValue(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__TagValue::id = id; _p->ns1__TagValue::time = time; } return _p; }

inline ns1__TagValue * soap_new_set_ns1__TagValue(struct soap *soap, unsigned int id, LONG64 time, std::string *value) { ns1__TagValue *_p = soap_instantiate_ns1__TagValue(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns1__TagValue::id = id; _p->ns1__TagValue::time = time; _p->ns1__TagValue::value = value; } return _p; }

inline void soap_delete_ns1__TagValue(struct soap *soap, ns1__TagValue *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__TagValue(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Fault(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Header(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___ns1__Query
#define SOAP_TYPE___ns1__Query (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Query(struct soap*, struct __ns1__Query *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Query(struct soap*, const struct __ns1__Query *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Query(struct soap*, const char*, int, const struct __ns1__Query *, const char*);
SOAP_FMAC3 struct __ns1__Query * SOAP_FMAC4 soap_in___ns1__Query(struct soap*, const char*, struct __ns1__Query *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Query(struct soap*, const struct __ns1__Query *, const char*, const char*);

#ifndef soap_write___ns1__Query
#define soap_write___ns1__Query(soap, data) ( soap_begin(soap), soap_serialize___ns1__Query(soap, data), soap_begin_send(soap) || soap_put___ns1__Query(soap, data, "-ns1:Query", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Query * SOAP_FMAC4 soap_get___ns1__Query(struct soap*, struct __ns1__Query *, const char*, const char*);

#ifndef soap_read___ns1__Query
#define soap_read___ns1__Query(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Query(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Query * SOAP_FMAC2 soap_instantiate___ns1__Query(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Query * soap_new___ns1__Query(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Query(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Query * soap_new_req___ns1__Query(struct soap *soap) { struct __ns1__Query *_p = soap_instantiate___ns1__Query(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Query(soap, _p); } return _p; }

inline struct __ns1__Query * soap_new_set___ns1__Query(struct soap *soap, _ns1__Query *ns1__Query) { struct __ns1__Query *_p = soap_instantiate___ns1__Query(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Query(soap, _p); _p->ns1__Query = ns1__Query; } return _p; }

inline void soap_delete___ns1__Query(struct soap *soap, struct __ns1__Query *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Query(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns1__Read
#define SOAP_TYPE___ns1__Read (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns1__Read(struct soap*, struct __ns1__Read *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns1__Read(struct soap*, const struct __ns1__Read *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns1__Read(struct soap*, const char*, int, const struct __ns1__Read *, const char*);
SOAP_FMAC3 struct __ns1__Read * SOAP_FMAC4 soap_in___ns1__Read(struct soap*, const char*, struct __ns1__Read *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns1__Read(struct soap*, const struct __ns1__Read *, const char*, const char*);

#ifndef soap_write___ns1__Read
#define soap_write___ns1__Read(soap, data) ( soap_begin(soap), soap_serialize___ns1__Read(soap, data), soap_begin_send(soap) || soap_put___ns1__Read(soap, data, "-ns1:Read", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns1__Read * SOAP_FMAC4 soap_get___ns1__Read(struct soap*, struct __ns1__Read *, const char*, const char*);

#ifndef soap_read___ns1__Read
#define soap_read___ns1__Read(soap, data) ( soap_begin_recv(soap) || !soap_get___ns1__Read(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns1__Read * SOAP_FMAC2 soap_instantiate___ns1__Read(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns1__Read * soap_new___ns1__Read(struct soap *soap, int n = -1) { return soap_instantiate___ns1__Read(soap, n, NULL, NULL, NULL); }

inline struct __ns1__Read * soap_new_req___ns1__Read(struct soap *soap) { struct __ns1__Read *_p = soap_instantiate___ns1__Read(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Read(soap, _p); } return _p; }

inline struct __ns1__Read * soap_new_set___ns1__Read(struct soap *soap, _ns1__Read *ns1__Read) { struct __ns1__Read *_p = soap_instantiate___ns1__Read(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns1__Read(soap, _p); _p->ns1__Read = ns1__Read; } return _p; }

inline void soap_delete___ns1__Read(struct soap *soap, struct __ns1__Read *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns1__Read(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTo_ns1__QueryResponse
#define SOAP_TYPE_PointerTo_ns1__QueryResponse (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__QueryResponse(struct soap*, _ns1__QueryResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__QueryResponse(struct soap*, const char *, int, _ns1__QueryResponse *const*, const char *);
SOAP_FMAC3 _ns1__QueryResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__QueryResponse(struct soap*, const char*, _ns1__QueryResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__QueryResponse(struct soap*, _ns1__QueryResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__QueryResponse
#define soap_write_PointerTo_ns1__QueryResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__QueryResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__QueryResponse(soap, data, "ns1:QueryResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__QueryResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__QueryResponse(struct soap*, _ns1__QueryResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__QueryResponse
#define soap_read_PointerTo_ns1__QueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__QueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Query
#define SOAP_TYPE_PointerTo_ns1__Query (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Query(struct soap*, _ns1__Query *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Query(struct soap*, const char *, int, _ns1__Query *const*, const char *);
SOAP_FMAC3 _ns1__Query ** SOAP_FMAC4 soap_in_PointerTo_ns1__Query(struct soap*, const char*, _ns1__Query **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Query(struct soap*, _ns1__Query *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Query
#define soap_write_PointerTo_ns1__Query(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__Query(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__Query(soap, data, "ns1:Query", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Query ** SOAP_FMAC4 soap_get_PointerTo_ns1__Query(struct soap*, _ns1__Query **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Query
#define soap_read_PointerTo_ns1__Query(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Query(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__ReadResponse
#define SOAP_TYPE_PointerTo_ns1__ReadResponse (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__ReadResponse(struct soap*, _ns1__ReadResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__ReadResponse(struct soap*, const char *, int, _ns1__ReadResponse *const*, const char *);
SOAP_FMAC3 _ns1__ReadResponse ** SOAP_FMAC4 soap_in_PointerTo_ns1__ReadResponse(struct soap*, const char*, _ns1__ReadResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__ReadResponse(struct soap*, _ns1__ReadResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__ReadResponse
#define soap_write_PointerTo_ns1__ReadResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__ReadResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__ReadResponse(soap, data, "ns1:ReadResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__ReadResponse ** SOAP_FMAC4 soap_get_PointerTo_ns1__ReadResponse(struct soap*, _ns1__ReadResponse **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__ReadResponse
#define soap_read_PointerTo_ns1__ReadResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__ReadResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTo_ns1__Read
#define SOAP_TYPE_PointerTo_ns1__Read (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_ns1__Read(struct soap*, _ns1__Read *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_ns1__Read(struct soap*, const char *, int, _ns1__Read *const*, const char *);
SOAP_FMAC3 _ns1__Read ** SOAP_FMAC4 soap_in_PointerTo_ns1__Read(struct soap*, const char*, _ns1__Read **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_ns1__Read(struct soap*, _ns1__Read *const*, const char*, const char*);

#ifndef soap_write_PointerTo_ns1__Read
#define soap_write_PointerTo_ns1__Read(soap, data) ( soap_begin(soap), soap_serialize_PointerTo_ns1__Read(soap, data), soap_begin_send(soap) || soap_put_PointerTo_ns1__Read(soap, data, "ns1:Read", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 _ns1__Read ** SOAP_FMAC4 soap_get_PointerTo_ns1__Read(struct soap*, _ns1__Read **, const char*, const char*);

#ifndef soap_read_PointerTo_ns1__Read
#define soap_read_PointerTo_ns1__Read(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_ns1__Read(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__TagValueArray
#define SOAP_TYPE_PointerTons1__TagValueArray (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__TagValueArray(struct soap*, ns1__TagValueArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__TagValueArray(struct soap*, const char *, int, ns1__TagValueArray *const*, const char *);
SOAP_FMAC3 ns1__TagValueArray ** SOAP_FMAC4 soap_in_PointerTons1__TagValueArray(struct soap*, const char*, ns1__TagValueArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__TagValueArray(struct soap*, ns1__TagValueArray *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__TagValueArray
#define soap_write_PointerTons1__TagValueArray(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__TagValueArray(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__TagValueArray(soap, data, "ns1:TagValueArray", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__TagValueArray ** SOAP_FMAC4 soap_get_PointerTons1__TagValueArray(struct soap*, ns1__TagValueArray **, const char*, const char*);

#ifndef soap_read_PointerTons1__TagValueArray
#define soap_read_PointerTons1__TagValueArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__TagValueArray(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__TagIdArray
#define SOAP_TYPE_PointerTons1__TagIdArray (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__TagIdArray(struct soap*, ns1__TagIdArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__TagIdArray(struct soap*, const char *, int, ns1__TagIdArray *const*, const char *);
SOAP_FMAC3 ns1__TagIdArray ** SOAP_FMAC4 soap_in_PointerTons1__TagIdArray(struct soap*, const char*, ns1__TagIdArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__TagIdArray(struct soap*, ns1__TagIdArray *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__TagIdArray
#define soap_write_PointerTons1__TagIdArray(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__TagIdArray(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__TagIdArray(soap, data, "ns1:TagIdArray", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__TagIdArray ** SOAP_FMAC4 soap_get_PointerTons1__TagIdArray(struct soap*, ns1__TagIdArray **, const char*, const char*);

#ifndef soap_read_PointerTons1__TagIdArray
#define soap_read_PointerTons1__TagIdArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__TagIdArray(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons1__TagValue
#define SOAP_TYPE_PointerTons1__TagValue (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons1__TagValue(struct soap*, ns1__TagValue *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons1__TagValue(struct soap*, const char *, int, ns1__TagValue *const*, const char *);
SOAP_FMAC3 ns1__TagValue ** SOAP_FMAC4 soap_in_PointerTons1__TagValue(struct soap*, const char*, ns1__TagValue **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons1__TagValue(struct soap*, ns1__TagValue *const*, const char*, const char*);

#ifndef soap_write_PointerTons1__TagValue
#define soap_write_PointerTons1__TagValue(soap, data) ( soap_begin(soap), soap_serialize_PointerTons1__TagValue(soap, data), soap_begin_send(soap) || soap_put_PointerTons1__TagValue(soap, data, "ns1:TagValue", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns1__TagValue ** SOAP_FMAC4 soap_get_PointerTons1__TagValue(struct soap*, ns1__TagValue **, const char*, const char*);

#ifndef soap_read_PointerTons1__TagValue
#define soap_read_PointerTons1__TagValue(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons1__TagValue(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_begin(soap), soap_serialize_PointerTostd__string(soap, data), soap_begin_send(soap) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin(soap), soap_serialize__QName(soap, data), soap_begin_send(soap) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin(soap), soap_serialize_string(soap, data), soap_begin_send(soap) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_std__vectorTemplateOfint
#define SOAP_TYPE_std__vectorTemplateOfint (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfint(struct soap*, std::vector<int >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfint(struct soap*, const std::vector<int >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfint(struct soap*, const char*, int, const std::vector<int >*, const char*);
SOAP_FMAC3 std::vector<int >* SOAP_FMAC4 soap_in_std__vectorTemplateOfint(struct soap*, const char*, std::vector<int >*, const char*);
SOAP_FMAC1 std::vector<int > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfint(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<int > * soap_new_std__vectorTemplateOfint(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfint(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfint(struct soap *soap, std::vector<int >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfint(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons1__TagValue
#define SOAP_TYPE_std__vectorTemplateOfPointerTons1__TagValue (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons1__TagValue(struct soap*, std::vector<ns1__TagValue * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons1__TagValue(struct soap*, const std::vector<ns1__TagValue * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons1__TagValue(struct soap*, const char*, int, const std::vector<ns1__TagValue * >*, const char*);
SOAP_FMAC3 std::vector<ns1__TagValue * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons1__TagValue(struct soap*, const char*, std::vector<ns1__TagValue * >*, const char*);
SOAP_FMAC1 std::vector<ns1__TagValue * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons1__TagValue(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns1__TagValue * > * soap_new_std__vectorTemplateOfPointerTons1__TagValue(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons1__TagValue(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons1__TagValue(struct soap *soap, std::vector<ns1__TagValue * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons1__TagValue(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
