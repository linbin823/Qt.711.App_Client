/* soapH.h
   Generated by gSOAP 2.8.14 from rdlite.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin(soap), soap_serialize_byte(soap, data), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_short
#define SOAP_TYPE_short (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_short(struct soap*, short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_short(struct soap*, const char*, int, const short *, const char*);
SOAP_FMAC3 short * SOAP_FMAC4 soap_in_short(struct soap*, const char*, short *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_short(struct soap*, const short *, const char*, const char*);

#ifndef soap_write_short
#define soap_write_short(soap, data) ( soap_begin(soap), soap_serialize_short(soap, data), soap_begin_send(soap) || soap_put_short(soap, data, "short", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 short * SOAP_FMAC4 soap_get_short(struct soap*, short *, const char*, const char*);

#ifndef soap_read_short
#define soap_read_short(soap, data) ( soap_begin_recv(soap) || !soap_get_short(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin(soap), soap_serialize_int(soap, data), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_LONG64
#define SOAP_TYPE_LONG64 (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_LONG64(struct soap*, LONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_LONG64(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_in_LONG64(struct soap*, const char*, LONG64 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_LONG64(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_LONG64
#define soap_write_LONG64(soap, data) ( soap_begin(soap), soap_serialize_LONG64(soap, data), soap_begin_send(soap) || soap_put_LONG64(soap, data, "long", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_LONG64(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_LONG64
#define soap_read_LONG64(soap, data) ( soap_begin_recv(soap) || !soap_get_LONG64(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (10)
#endif

#define soap_default_xsd__unsignedByte(soap, a) soap_default_unsignedByte(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_xsd__unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_xsd__unsignedByte
#define soap_write_xsd__unsignedByte(soap, data) ( soap_begin(soap), soap_serialize_xsd__unsignedByte(soap, data), soap_begin_send(soap) || soap_put_xsd__unsignedByte(soap, data, "xsd:unsignedByte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_xsd__unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_xsd__unsignedByte
#define soap_read_xsd__unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (9)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_begin(soap), soap_serialize_unsignedByte(soap, data), soap_begin_send(soap) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedShort
#define SOAP_TYPE_unsignedShort (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedShort(struct soap*, unsigned short *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedShort(struct soap*, const char*, int, const unsigned short *, const char*);
SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_in_unsignedShort(struct soap*, const char*, unsigned short *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedShort(struct soap*, const unsigned short *, const char*, const char*);

#ifndef soap_write_unsignedShort
#define soap_write_unsignedShort(soap, data) ( soap_begin(soap), soap_serialize_unsignedShort(soap, data), soap_begin_send(soap) || soap_put_unsignedShort(soap, data, "unsignedShort", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned short * SOAP_FMAC4 soap_get_unsignedShort(struct soap*, unsigned short *, const char*, const char*);

#ifndef soap_read_unsignedShort
#define soap_read_unsignedShort(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedShort(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_begin(soap), soap_serialize_unsignedInt(soap, data), soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_begin(soap), soap_serialize_bool(soap, data), soap_begin_send(soap) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin(soap), soap_serialize_std__string(soap, data), soap_begin_send(soap) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__TagIdArray
#define SOAP_TYPE_ns2__TagIdArray (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__TagIdArray(struct soap*, const char*, int, const ns2__TagIdArray *, const char*);
SOAP_FMAC3 ns2__TagIdArray * SOAP_FMAC4 soap_in_ns2__TagIdArray(struct soap*, const char*, ns2__TagIdArray *, const char*);

#ifndef soap_write_ns2__TagIdArray
#define soap_write_ns2__TagIdArray(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:TagIdArray", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__TagIdArray * SOAP_FMAC4 soap_get_ns2__TagIdArray(struct soap*, ns2__TagIdArray *, const char*, const char*);

#ifndef soap_read_ns2__TagIdArray
#define soap_read_ns2__TagIdArray(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__TagIdArray(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__TagIdArray * SOAP_FMAC2 soap_instantiate_ns2__TagIdArray(struct soap*, int, const char*, const char*, size_t*);

inline ns2__TagIdArray * soap_new_ns2__TagIdArray(struct soap *soap, int n = -1) { return soap_instantiate_ns2__TagIdArray(soap, n, NULL, NULL, NULL); }

inline ns2__TagIdArray * soap_new_req_ns2__TagIdArray(struct soap *soap) { ns2__TagIdArray *_p = soap_instantiate_ns2__TagIdArray(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns2__TagIdArray * soap_new_set_ns2__TagIdArray(struct soap *soap, std::vector<int >& item) { ns2__TagIdArray *_p = soap_instantiate_ns2__TagIdArray(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__TagIdArray::item = item; } return _p; }

inline void soap_delete_ns2__TagIdArray(struct soap *soap, ns2__TagIdArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__TagIdArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__TagValueArray
#define SOAP_TYPE_ns2__TagValueArray (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__TagValueArray(struct soap*, const char*, int, const ns2__TagValueArray *, const char*);
SOAP_FMAC3 ns2__TagValueArray * SOAP_FMAC4 soap_in_ns2__TagValueArray(struct soap*, const char*, ns2__TagValueArray *, const char*);

#ifndef soap_write_ns2__TagValueArray
#define soap_write_ns2__TagValueArray(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:TagValueArray", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__TagValueArray * SOAP_FMAC4 soap_get_ns2__TagValueArray(struct soap*, ns2__TagValueArray *, const char*, const char*);

#ifndef soap_read_ns2__TagValueArray
#define soap_read_ns2__TagValueArray(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__TagValueArray(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__TagValueArray * SOAP_FMAC2 soap_instantiate_ns2__TagValueArray(struct soap*, int, const char*, const char*, size_t*);

inline ns2__TagValueArray * soap_new_ns2__TagValueArray(struct soap *soap, int n = -1) { return soap_instantiate_ns2__TagValueArray(soap, n, NULL, NULL, NULL); }

inline ns2__TagValueArray * soap_new_req_ns2__TagValueArray(struct soap *soap, int error) { ns2__TagValueArray *_p = soap_instantiate_ns2__TagValueArray(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__TagValueArray::error = error; } return _p; }

inline ns2__TagValueArray * soap_new_set_ns2__TagValueArray(struct soap *soap, int error, std::vector<ns2__TagValue * >& item) { ns2__TagValueArray *_p = soap_instantiate_ns2__TagValueArray(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__TagValueArray::error = error; _p->ns2__TagValueArray::item = item; } return _p; }

inline void soap_delete_ns2__TagValueArray(struct soap *soap, ns2__TagValueArray *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__TagValueArray(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__TagValue
#define SOAP_TYPE_ns2__TagValue (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__TagValue(struct soap*, const char*, int, const ns2__TagValue *, const char*);
SOAP_FMAC3 ns2__TagValue * SOAP_FMAC4 soap_in_ns2__TagValue(struct soap*, const char*, ns2__TagValue *, const char*);

#ifndef soap_write_ns2__TagValue
#define soap_write_ns2__TagValue(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns2:TagValue", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__TagValue * SOAP_FMAC4 soap_get_ns2__TagValue(struct soap*, ns2__TagValue *, const char*, const char*);

#ifndef soap_read_ns2__TagValue
#define soap_read_ns2__TagValue(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__TagValue(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns2__TagValue * SOAP_FMAC2 soap_instantiate_ns2__TagValue(struct soap*, int, const char*, const char*, size_t*);

inline ns2__TagValue * soap_new_ns2__TagValue(struct soap *soap, int n = -1) { return soap_instantiate_ns2__TagValue(soap, n, NULL, NULL, NULL); }

inline ns2__TagValue * soap_new_req_ns2__TagValue(struct soap *soap, unsigned int id, LONG64 time) { ns2__TagValue *_p = soap_instantiate_ns2__TagValue(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__TagValue::id = id; _p->ns2__TagValue::time = time; } return _p; }

inline ns2__TagValue * soap_new_set_ns2__TagValue(struct soap *soap, unsigned int id, LONG64 time, std::string *value) { ns2__TagValue *_p = soap_instantiate_ns2__TagValue(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns2__TagValue::id = id; _p->ns2__TagValue::time = time; _p->ns2__TagValue::value = value; } return _p; }

inline void soap_delete_ns2__TagValue(struct soap *soap, ns2__TagValue *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__TagValue(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Fault(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Header(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns2__RemoveStation
#define SOAP_TYPE_ns2__RemoveStation (68)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__RemoveStation(struct soap*, struct ns2__RemoveStation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__RemoveStation(struct soap*, const struct ns2__RemoveStation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__RemoveStation(struct soap*, const char*, int, const struct ns2__RemoveStation *, const char*);
SOAP_FMAC3 struct ns2__RemoveStation * SOAP_FMAC4 soap_in_ns2__RemoveStation(struct soap*, const char*, struct ns2__RemoveStation *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__RemoveStation(struct soap*, const struct ns2__RemoveStation *, const char*, const char*);

#ifndef soap_write_ns2__RemoveStation
#define soap_write_ns2__RemoveStation(soap, data) ( soap_begin(soap), soap_serialize_ns2__RemoveStation(soap, data), soap_begin_send(soap) || soap_put_ns2__RemoveStation(soap, data, "ns2:RemoveStation", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__RemoveStation * SOAP_FMAC4 soap_get_ns2__RemoveStation(struct soap*, struct ns2__RemoveStation *, const char*, const char*);

#ifndef soap_read_ns2__RemoveStation
#define soap_read_ns2__RemoveStation(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__RemoveStation(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__RemoveStation * SOAP_FMAC2 soap_instantiate_ns2__RemoveStation(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__RemoveStation * soap_new_ns2__RemoveStation(struct soap *soap, int n = -1) { return soap_instantiate_ns2__RemoveStation(soap, n, NULL, NULL, NULL); }

inline struct ns2__RemoveStation * soap_new_req_ns2__RemoveStation(struct soap *soap, unsigned char id) { struct ns2__RemoveStation *_p = soap_instantiate_ns2__RemoveStation(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RemoveStation(soap, _p); _p->id = id; } return _p; }

inline struct ns2__RemoveStation * soap_new_set_ns2__RemoveStation(struct soap *soap, unsigned char id) { struct ns2__RemoveStation *_p = soap_instantiate_ns2__RemoveStation(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RemoveStation(soap, _p); _p->id = id; } return _p; }

inline void soap_delete_ns2__RemoveStation(struct soap *soap, struct ns2__RemoveStation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__RemoveStation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__RemoveStationResponse
#define SOAP_TYPE_ns2__RemoveStationResponse (67)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__RemoveStationResponse(struct soap*, struct ns2__RemoveStationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__RemoveStationResponse(struct soap*, const struct ns2__RemoveStationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__RemoveStationResponse(struct soap*, const char*, int, const struct ns2__RemoveStationResponse *, const char*);
SOAP_FMAC3 struct ns2__RemoveStationResponse * SOAP_FMAC4 soap_in_ns2__RemoveStationResponse(struct soap*, const char*, struct ns2__RemoveStationResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__RemoveStationResponse(struct soap*, const struct ns2__RemoveStationResponse *, const char*, const char*);

#ifndef soap_write_ns2__RemoveStationResponse
#define soap_write_ns2__RemoveStationResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__RemoveStationResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__RemoveStationResponse(soap, data, "ns2:RemoveStationResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__RemoveStationResponse * SOAP_FMAC4 soap_get_ns2__RemoveStationResponse(struct soap*, struct ns2__RemoveStationResponse *, const char*, const char*);

#ifndef soap_read_ns2__RemoveStationResponse
#define soap_read_ns2__RemoveStationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__RemoveStationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__RemoveStationResponse * SOAP_FMAC2 soap_instantiate_ns2__RemoveStationResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__RemoveStationResponse * soap_new_ns2__RemoveStationResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__RemoveStationResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__RemoveStationResponse * soap_new_req_ns2__RemoveStationResponse(struct soap *soap, int result) { struct ns2__RemoveStationResponse *_p = soap_instantiate_ns2__RemoveStationResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RemoveStationResponse(soap, _p); _p->result = result; } return _p; }

inline struct ns2__RemoveStationResponse * soap_new_set_ns2__RemoveStationResponse(struct soap *soap, int result) { struct ns2__RemoveStationResponse *_p = soap_instantiate_ns2__RemoveStationResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RemoveStationResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__RemoveStationResponse(struct soap *soap, struct ns2__RemoveStationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__RemoveStationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__EnableStation
#define SOAP_TYPE_ns2__EnableStation (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__EnableStation(struct soap*, struct ns2__EnableStation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__EnableStation(struct soap*, const struct ns2__EnableStation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__EnableStation(struct soap*, const char*, int, const struct ns2__EnableStation *, const char*);
SOAP_FMAC3 struct ns2__EnableStation * SOAP_FMAC4 soap_in_ns2__EnableStation(struct soap*, const char*, struct ns2__EnableStation *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__EnableStation(struct soap*, const struct ns2__EnableStation *, const char*, const char*);

#ifndef soap_write_ns2__EnableStation
#define soap_write_ns2__EnableStation(soap, data) ( soap_begin(soap), soap_serialize_ns2__EnableStation(soap, data), soap_begin_send(soap) || soap_put_ns2__EnableStation(soap, data, "ns2:EnableStation", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__EnableStation * SOAP_FMAC4 soap_get_ns2__EnableStation(struct soap*, struct ns2__EnableStation *, const char*, const char*);

#ifndef soap_read_ns2__EnableStation
#define soap_read_ns2__EnableStation(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__EnableStation(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__EnableStation * SOAP_FMAC2 soap_instantiate_ns2__EnableStation(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__EnableStation * soap_new_ns2__EnableStation(struct soap *soap, int n = -1) { return soap_instantiate_ns2__EnableStation(soap, n, NULL, NULL, NULL); }

inline struct ns2__EnableStation * soap_new_req_ns2__EnableStation(struct soap *soap, unsigned char id, bool enabled) { struct ns2__EnableStation *_p = soap_instantiate_ns2__EnableStation(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__EnableStation(soap, _p); _p->id = id; _p->enabled = enabled; } return _p; }

inline struct ns2__EnableStation * soap_new_set_ns2__EnableStation(struct soap *soap, unsigned char id, bool enabled) { struct ns2__EnableStation *_p = soap_instantiate_ns2__EnableStation(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__EnableStation(soap, _p); _p->id = id; _p->enabled = enabled; } return _p; }

inline void soap_delete_ns2__EnableStation(struct soap *soap, struct ns2__EnableStation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__EnableStation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__EnableStationResponse
#define SOAP_TYPE_ns2__EnableStationResponse (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__EnableStationResponse(struct soap*, struct ns2__EnableStationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__EnableStationResponse(struct soap*, const struct ns2__EnableStationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__EnableStationResponse(struct soap*, const char*, int, const struct ns2__EnableStationResponse *, const char*);
SOAP_FMAC3 struct ns2__EnableStationResponse * SOAP_FMAC4 soap_in_ns2__EnableStationResponse(struct soap*, const char*, struct ns2__EnableStationResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__EnableStationResponse(struct soap*, const struct ns2__EnableStationResponse *, const char*, const char*);

#ifndef soap_write_ns2__EnableStationResponse
#define soap_write_ns2__EnableStationResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__EnableStationResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__EnableStationResponse(soap, data, "ns2:EnableStationResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__EnableStationResponse * SOAP_FMAC4 soap_get_ns2__EnableStationResponse(struct soap*, struct ns2__EnableStationResponse *, const char*, const char*);

#ifndef soap_read_ns2__EnableStationResponse
#define soap_read_ns2__EnableStationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__EnableStationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__EnableStationResponse * SOAP_FMAC2 soap_instantiate_ns2__EnableStationResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__EnableStationResponse * soap_new_ns2__EnableStationResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__EnableStationResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__EnableStationResponse * soap_new_req_ns2__EnableStationResponse(struct soap *soap, int result) { struct ns2__EnableStationResponse *_p = soap_instantiate_ns2__EnableStationResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__EnableStationResponse(soap, _p); _p->result = result; } return _p; }

inline struct ns2__EnableStationResponse * soap_new_set_ns2__EnableStationResponse(struct soap *soap, int result) { struct ns2__EnableStationResponse *_p = soap_instantiate_ns2__EnableStationResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__EnableStationResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__EnableStationResponse(struct soap *soap, struct ns2__EnableStationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__EnableStationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__SetStation
#define SOAP_TYPE_ns2__SetStation (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__SetStation(struct soap*, struct ns2__SetStation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__SetStation(struct soap*, const struct ns2__SetStation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__SetStation(struct soap*, const char*, int, const struct ns2__SetStation *, const char*);
SOAP_FMAC3 struct ns2__SetStation * SOAP_FMAC4 soap_in_ns2__SetStation(struct soap*, const char*, struct ns2__SetStation *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__SetStation(struct soap*, const struct ns2__SetStation *, const char*, const char*);

#ifndef soap_write_ns2__SetStation
#define soap_write_ns2__SetStation(soap, data) ( soap_begin(soap), soap_serialize_ns2__SetStation(soap, data), soap_begin_send(soap) || soap_put_ns2__SetStation(soap, data, "ns2:SetStation", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__SetStation * SOAP_FMAC4 soap_get_ns2__SetStation(struct soap*, struct ns2__SetStation *, const char*, const char*);

#ifndef soap_read_ns2__SetStation
#define soap_read_ns2__SetStation(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__SetStation(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__SetStation * SOAP_FMAC2 soap_instantiate_ns2__SetStation(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__SetStation * soap_new_ns2__SetStation(struct soap *soap, int n = -1) { return soap_instantiate_ns2__SetStation(soap, n, NULL, NULL, NULL); }

inline struct ns2__SetStation * soap_new_req_ns2__SetStation(struct soap *soap, unsigned char id, std::string& name, bool isScada, std::string& recvHost, unsigned short recvPort, std::string& syncHost, unsigned short syncPort) { struct ns2__SetStation *_p = soap_instantiate_ns2__SetStation(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__SetStation(soap, _p); _p->id = id; _p->name = name; _p->isScada = isScada; _p->recvHost = recvHost; _p->recvPort = recvPort; _p->syncHost = syncHost; _p->syncPort = syncPort; } return _p; }

inline struct ns2__SetStation * soap_new_set_ns2__SetStation(struct soap *soap, unsigned char id, std::string& name, bool isScada, std::string& recvHost, unsigned short recvPort, std::string& syncHost, unsigned short syncPort) { struct ns2__SetStation *_p = soap_instantiate_ns2__SetStation(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__SetStation(soap, _p); _p->id = id; _p->name = name; _p->isScada = isScada; _p->recvHost = recvHost; _p->recvPort = recvPort; _p->syncHost = syncHost; _p->syncPort = syncPort; } return _p; }

inline void soap_delete_ns2__SetStation(struct soap *soap, struct ns2__SetStation *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__SetStation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__SetStationResponse
#define SOAP_TYPE_ns2__SetStationResponse (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__SetStationResponse(struct soap*, struct ns2__SetStationResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__SetStationResponse(struct soap*, const struct ns2__SetStationResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__SetStationResponse(struct soap*, const char*, int, const struct ns2__SetStationResponse *, const char*);
SOAP_FMAC3 struct ns2__SetStationResponse * SOAP_FMAC4 soap_in_ns2__SetStationResponse(struct soap*, const char*, struct ns2__SetStationResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__SetStationResponse(struct soap*, const struct ns2__SetStationResponse *, const char*, const char*);

#ifndef soap_write_ns2__SetStationResponse
#define soap_write_ns2__SetStationResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__SetStationResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__SetStationResponse(soap, data, "ns2:SetStationResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__SetStationResponse * SOAP_FMAC4 soap_get_ns2__SetStationResponse(struct soap*, struct ns2__SetStationResponse *, const char*, const char*);

#ifndef soap_read_ns2__SetStationResponse
#define soap_read_ns2__SetStationResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__SetStationResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__SetStationResponse * SOAP_FMAC2 soap_instantiate_ns2__SetStationResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__SetStationResponse * soap_new_ns2__SetStationResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__SetStationResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__SetStationResponse * soap_new_req_ns2__SetStationResponse(struct soap *soap, int result) { struct ns2__SetStationResponse *_p = soap_instantiate_ns2__SetStationResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__SetStationResponse(soap, _p); _p->result = result; } return _p; }

inline struct ns2__SetStationResponse * soap_new_set_ns2__SetStationResponse(struct soap *soap, int result) { struct ns2__SetStationResponse *_p = soap_instantiate_ns2__SetStationResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__SetStationResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__SetStationResponse(struct soap *soap, struct ns2__SetStationResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__SetStationResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__RemvoeMeta
#define SOAP_TYPE_ns2__RemvoeMeta (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__RemvoeMeta(struct soap*, struct ns2__RemvoeMeta *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__RemvoeMeta(struct soap*, const struct ns2__RemvoeMeta *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__RemvoeMeta(struct soap*, const char*, int, const struct ns2__RemvoeMeta *, const char*);
SOAP_FMAC3 struct ns2__RemvoeMeta * SOAP_FMAC4 soap_in_ns2__RemvoeMeta(struct soap*, const char*, struct ns2__RemvoeMeta *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__RemvoeMeta(struct soap*, const struct ns2__RemvoeMeta *, const char*, const char*);

#ifndef soap_write_ns2__RemvoeMeta
#define soap_write_ns2__RemvoeMeta(soap, data) ( soap_begin(soap), soap_serialize_ns2__RemvoeMeta(soap, data), soap_begin_send(soap) || soap_put_ns2__RemvoeMeta(soap, data, "ns2:RemvoeMeta", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__RemvoeMeta * SOAP_FMAC4 soap_get_ns2__RemvoeMeta(struct soap*, struct ns2__RemvoeMeta *, const char*, const char*);

#ifndef soap_read_ns2__RemvoeMeta
#define soap_read_ns2__RemvoeMeta(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__RemvoeMeta(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__RemvoeMeta * SOAP_FMAC2 soap_instantiate_ns2__RemvoeMeta(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__RemvoeMeta * soap_new_ns2__RemvoeMeta(struct soap *soap, int n = -1) { return soap_instantiate_ns2__RemvoeMeta(soap, n, NULL, NULL, NULL); }

inline struct ns2__RemvoeMeta * soap_new_req_ns2__RemvoeMeta(struct soap *soap, unsigned char stationId, unsigned short id) { struct ns2__RemvoeMeta *_p = soap_instantiate_ns2__RemvoeMeta(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RemvoeMeta(soap, _p); _p->stationId = stationId; _p->id = id; } return _p; }

inline struct ns2__RemvoeMeta * soap_new_set_ns2__RemvoeMeta(struct soap *soap, unsigned char stationId, unsigned short id) { struct ns2__RemvoeMeta *_p = soap_instantiate_ns2__RemvoeMeta(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RemvoeMeta(soap, _p); _p->stationId = stationId; _p->id = id; } return _p; }

inline void soap_delete_ns2__RemvoeMeta(struct soap *soap, struct ns2__RemvoeMeta *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__RemvoeMeta(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__RemvoeMetaResponse
#define SOAP_TYPE_ns2__RemvoeMetaResponse (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__RemvoeMetaResponse(struct soap*, struct ns2__RemvoeMetaResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__RemvoeMetaResponse(struct soap*, const struct ns2__RemvoeMetaResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__RemvoeMetaResponse(struct soap*, const char*, int, const struct ns2__RemvoeMetaResponse *, const char*);
SOAP_FMAC3 struct ns2__RemvoeMetaResponse * SOAP_FMAC4 soap_in_ns2__RemvoeMetaResponse(struct soap*, const char*, struct ns2__RemvoeMetaResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__RemvoeMetaResponse(struct soap*, const struct ns2__RemvoeMetaResponse *, const char*, const char*);

#ifndef soap_write_ns2__RemvoeMetaResponse
#define soap_write_ns2__RemvoeMetaResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__RemvoeMetaResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__RemvoeMetaResponse(soap, data, "ns2:RemvoeMetaResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__RemvoeMetaResponse * SOAP_FMAC4 soap_get_ns2__RemvoeMetaResponse(struct soap*, struct ns2__RemvoeMetaResponse *, const char*, const char*);

#ifndef soap_read_ns2__RemvoeMetaResponse
#define soap_read_ns2__RemvoeMetaResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__RemvoeMetaResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__RemvoeMetaResponse * SOAP_FMAC2 soap_instantiate_ns2__RemvoeMetaResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__RemvoeMetaResponse * soap_new_ns2__RemvoeMetaResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__RemvoeMetaResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__RemvoeMetaResponse * soap_new_req_ns2__RemvoeMetaResponse(struct soap *soap, int result) { struct ns2__RemvoeMetaResponse *_p = soap_instantiate_ns2__RemvoeMetaResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RemvoeMetaResponse(soap, _p); _p->result = result; } return _p; }

inline struct ns2__RemvoeMetaResponse * soap_new_set_ns2__RemvoeMetaResponse(struct soap *soap, int result) { struct ns2__RemvoeMetaResponse *_p = soap_instantiate_ns2__RemvoeMetaResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RemvoeMetaResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__RemvoeMetaResponse(struct soap *soap, struct ns2__RemvoeMetaResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__RemvoeMetaResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__SetMeta
#define SOAP_TYPE_ns2__SetMeta (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__SetMeta(struct soap*, struct ns2__SetMeta *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__SetMeta(struct soap*, const struct ns2__SetMeta *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__SetMeta(struct soap*, const char*, int, const struct ns2__SetMeta *, const char*);
SOAP_FMAC3 struct ns2__SetMeta * SOAP_FMAC4 soap_in_ns2__SetMeta(struct soap*, const char*, struct ns2__SetMeta *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__SetMeta(struct soap*, const struct ns2__SetMeta *, const char*, const char*);

#ifndef soap_write_ns2__SetMeta
#define soap_write_ns2__SetMeta(soap, data) ( soap_begin(soap), soap_serialize_ns2__SetMeta(soap, data), soap_begin_send(soap) || soap_put_ns2__SetMeta(soap, data, "ns2:SetMeta", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__SetMeta * SOAP_FMAC4 soap_get_ns2__SetMeta(struct soap*, struct ns2__SetMeta *, const char*, const char*);

#ifndef soap_read_ns2__SetMeta
#define soap_read_ns2__SetMeta(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__SetMeta(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__SetMeta * SOAP_FMAC2 soap_instantiate_ns2__SetMeta(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__SetMeta * soap_new_ns2__SetMeta(struct soap *soap, int n = -1) { return soap_instantiate_ns2__SetMeta(soap, n, NULL, NULL, NULL); }

inline struct ns2__SetMeta * soap_new_req_ns2__SetMeta(struct soap *soap, unsigned char stationId, unsigned short id, int index, std::string& name, int dataLen, bool isValue, bool isAlarm) { struct ns2__SetMeta *_p = soap_instantiate_ns2__SetMeta(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__SetMeta(soap, _p); _p->stationId = stationId; _p->id = id; _p->index = index; _p->name = name; _p->dataLen = dataLen; _p->isValue = isValue; _p->isAlarm = isAlarm; } return _p; }

inline struct ns2__SetMeta * soap_new_set_ns2__SetMeta(struct soap *soap, unsigned char stationId, unsigned short id, int index, std::string& name, int dataLen, bool isValue, bool isAlarm) { struct ns2__SetMeta *_p = soap_instantiate_ns2__SetMeta(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__SetMeta(soap, _p); _p->stationId = stationId; _p->id = id; _p->index = index; _p->name = name; _p->dataLen = dataLen; _p->isValue = isValue; _p->isAlarm = isAlarm; } return _p; }

inline void soap_delete_ns2__SetMeta(struct soap *soap, struct ns2__SetMeta *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__SetMeta(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__SetMetaResponse
#define SOAP_TYPE_ns2__SetMetaResponse (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__SetMetaResponse(struct soap*, struct ns2__SetMetaResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__SetMetaResponse(struct soap*, const struct ns2__SetMetaResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__SetMetaResponse(struct soap*, const char*, int, const struct ns2__SetMetaResponse *, const char*);
SOAP_FMAC3 struct ns2__SetMetaResponse * SOAP_FMAC4 soap_in_ns2__SetMetaResponse(struct soap*, const char*, struct ns2__SetMetaResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__SetMetaResponse(struct soap*, const struct ns2__SetMetaResponse *, const char*, const char*);

#ifndef soap_write_ns2__SetMetaResponse
#define soap_write_ns2__SetMetaResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__SetMetaResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__SetMetaResponse(soap, data, "ns2:SetMetaResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__SetMetaResponse * SOAP_FMAC4 soap_get_ns2__SetMetaResponse(struct soap*, struct ns2__SetMetaResponse *, const char*, const char*);

#ifndef soap_read_ns2__SetMetaResponse
#define soap_read_ns2__SetMetaResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__SetMetaResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__SetMetaResponse * SOAP_FMAC2 soap_instantiate_ns2__SetMetaResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__SetMetaResponse * soap_new_ns2__SetMetaResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__SetMetaResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__SetMetaResponse * soap_new_req_ns2__SetMetaResponse(struct soap *soap, int result) { struct ns2__SetMetaResponse *_p = soap_instantiate_ns2__SetMetaResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__SetMetaResponse(soap, _p); _p->result = result; } return _p; }

inline struct ns2__SetMetaResponse * soap_new_set_ns2__SetMetaResponse(struct soap *soap, int result) { struct ns2__SetMetaResponse *_p = soap_instantiate_ns2__SetMetaResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__SetMetaResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__SetMetaResponse(struct soap *soap, struct ns2__SetMetaResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__SetMetaResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__EnableTag
#define SOAP_TYPE_ns2__EnableTag (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__EnableTag(struct soap*, struct ns2__EnableTag *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__EnableTag(struct soap*, const struct ns2__EnableTag *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__EnableTag(struct soap*, const char*, int, const struct ns2__EnableTag *, const char*);
SOAP_FMAC3 struct ns2__EnableTag * SOAP_FMAC4 soap_in_ns2__EnableTag(struct soap*, const char*, struct ns2__EnableTag *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__EnableTag(struct soap*, const struct ns2__EnableTag *, const char*, const char*);

#ifndef soap_write_ns2__EnableTag
#define soap_write_ns2__EnableTag(soap, data) ( soap_begin(soap), soap_serialize_ns2__EnableTag(soap, data), soap_begin_send(soap) || soap_put_ns2__EnableTag(soap, data, "ns2:EnableTag", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__EnableTag * SOAP_FMAC4 soap_get_ns2__EnableTag(struct soap*, struct ns2__EnableTag *, const char*, const char*);

#ifndef soap_read_ns2__EnableTag
#define soap_read_ns2__EnableTag(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__EnableTag(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__EnableTag * SOAP_FMAC2 soap_instantiate_ns2__EnableTag(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__EnableTag * soap_new_ns2__EnableTag(struct soap *soap, int n = -1) { return soap_instantiate_ns2__EnableTag(soap, n, NULL, NULL, NULL); }

inline struct ns2__EnableTag * soap_new_req_ns2__EnableTag(struct soap *soap, unsigned char stationId, unsigned int id, bool enable) { struct ns2__EnableTag *_p = soap_instantiate_ns2__EnableTag(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__EnableTag(soap, _p); _p->stationId = stationId; _p->id = id; _p->enable = enable; } return _p; }

inline struct ns2__EnableTag * soap_new_set_ns2__EnableTag(struct soap *soap, unsigned char stationId, unsigned int id, bool enable) { struct ns2__EnableTag *_p = soap_instantiate_ns2__EnableTag(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__EnableTag(soap, _p); _p->stationId = stationId; _p->id = id; _p->enable = enable; } return _p; }

inline void soap_delete_ns2__EnableTag(struct soap *soap, struct ns2__EnableTag *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__EnableTag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__EnableTagResponse
#define SOAP_TYPE_ns2__EnableTagResponse (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__EnableTagResponse(struct soap*, struct ns2__EnableTagResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__EnableTagResponse(struct soap*, const struct ns2__EnableTagResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__EnableTagResponse(struct soap*, const char*, int, const struct ns2__EnableTagResponse *, const char*);
SOAP_FMAC3 struct ns2__EnableTagResponse * SOAP_FMAC4 soap_in_ns2__EnableTagResponse(struct soap*, const char*, struct ns2__EnableTagResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__EnableTagResponse(struct soap*, const struct ns2__EnableTagResponse *, const char*, const char*);

#ifndef soap_write_ns2__EnableTagResponse
#define soap_write_ns2__EnableTagResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__EnableTagResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__EnableTagResponse(soap, data, "ns2:EnableTagResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__EnableTagResponse * SOAP_FMAC4 soap_get_ns2__EnableTagResponse(struct soap*, struct ns2__EnableTagResponse *, const char*, const char*);

#ifndef soap_read_ns2__EnableTagResponse
#define soap_read_ns2__EnableTagResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__EnableTagResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__EnableTagResponse * SOAP_FMAC2 soap_instantiate_ns2__EnableTagResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__EnableTagResponse * soap_new_ns2__EnableTagResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__EnableTagResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__EnableTagResponse * soap_new_req_ns2__EnableTagResponse(struct soap *soap, int result) { struct ns2__EnableTagResponse *_p = soap_instantiate_ns2__EnableTagResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__EnableTagResponse(soap, _p); _p->result = result; } return _p; }

inline struct ns2__EnableTagResponse * soap_new_set_ns2__EnableTagResponse(struct soap *soap, int result) { struct ns2__EnableTagResponse *_p = soap_instantiate_ns2__EnableTagResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__EnableTagResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__EnableTagResponse(struct soap *soap, struct ns2__EnableTagResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__EnableTagResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__SetTag
#define SOAP_TYPE_ns2__SetTag (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__SetTag(struct soap*, struct ns2__SetTag *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__SetTag(struct soap*, const struct ns2__SetTag *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__SetTag(struct soap*, const char*, int, const struct ns2__SetTag *, const char*);
SOAP_FMAC3 struct ns2__SetTag * SOAP_FMAC4 soap_in_ns2__SetTag(struct soap*, const char*, struct ns2__SetTag *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__SetTag(struct soap*, const struct ns2__SetTag *, const char*, const char*);

#ifndef soap_write_ns2__SetTag
#define soap_write_ns2__SetTag(soap, data) ( soap_begin(soap), soap_serialize_ns2__SetTag(soap, data), soap_begin_send(soap) || soap_put_ns2__SetTag(soap, data, "ns2:SetTag", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__SetTag * SOAP_FMAC4 soap_get_ns2__SetTag(struct soap*, struct ns2__SetTag *, const char*, const char*);

#ifndef soap_read_ns2__SetTag
#define soap_read_ns2__SetTag(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__SetTag(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__SetTag * SOAP_FMAC2 soap_instantiate_ns2__SetTag(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__SetTag * soap_new_ns2__SetTag(struct soap *soap, int n = -1) { return soap_instantiate_ns2__SetTag(soap, n, NULL, NULL, NULL); }

inline struct ns2__SetTag * soap_new_req_ns2__SetTag(struct soap *soap, unsigned char stationId, unsigned int id, unsigned short metaId) { struct ns2__SetTag *_p = soap_instantiate_ns2__SetTag(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__SetTag(soap, _p); _p->stationId = stationId; _p->id = id; _p->metaId = metaId; } return _p; }

inline struct ns2__SetTag * soap_new_set_ns2__SetTag(struct soap *soap, unsigned char stationId, unsigned int id, unsigned short metaId) { struct ns2__SetTag *_p = soap_instantiate_ns2__SetTag(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__SetTag(soap, _p); _p->stationId = stationId; _p->id = id; _p->metaId = metaId; } return _p; }

inline void soap_delete_ns2__SetTag(struct soap *soap, struct ns2__SetTag *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__SetTag(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__SetTagResponse
#define SOAP_TYPE_ns2__SetTagResponse (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__SetTagResponse(struct soap*, struct ns2__SetTagResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__SetTagResponse(struct soap*, const struct ns2__SetTagResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__SetTagResponse(struct soap*, const char*, int, const struct ns2__SetTagResponse *, const char*);
SOAP_FMAC3 struct ns2__SetTagResponse * SOAP_FMAC4 soap_in_ns2__SetTagResponse(struct soap*, const char*, struct ns2__SetTagResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__SetTagResponse(struct soap*, const struct ns2__SetTagResponse *, const char*, const char*);

#ifndef soap_write_ns2__SetTagResponse
#define soap_write_ns2__SetTagResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__SetTagResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__SetTagResponse(soap, data, "ns2:SetTagResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__SetTagResponse * SOAP_FMAC4 soap_get_ns2__SetTagResponse(struct soap*, struct ns2__SetTagResponse *, const char*, const char*);

#ifndef soap_read_ns2__SetTagResponse
#define soap_read_ns2__SetTagResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__SetTagResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__SetTagResponse * SOAP_FMAC2 soap_instantiate_ns2__SetTagResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__SetTagResponse * soap_new_ns2__SetTagResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__SetTagResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__SetTagResponse * soap_new_req_ns2__SetTagResponse(struct soap *soap, int result) { struct ns2__SetTagResponse *_p = soap_instantiate_ns2__SetTagResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__SetTagResponse(soap, _p); _p->result = result; } return _p; }

inline struct ns2__SetTagResponse * soap_new_set_ns2__SetTagResponse(struct soap *soap, int result) { struct ns2__SetTagResponse *_p = soap_instantiate_ns2__SetTagResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__SetTagResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__SetTagResponse(struct soap *soap, struct ns2__SetTagResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__SetTagResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__Query
#define SOAP_TYPE_ns2__Query (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__Query(struct soap*, struct ns2__Query *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__Query(struct soap*, const struct ns2__Query *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__Query(struct soap*, const char*, int, const struct ns2__Query *, const char*);
SOAP_FMAC3 struct ns2__Query * SOAP_FMAC4 soap_in_ns2__Query(struct soap*, const char*, struct ns2__Query *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__Query(struct soap*, const struct ns2__Query *, const char*, const char*);

#ifndef soap_write_ns2__Query
#define soap_write_ns2__Query(soap, data) ( soap_begin(soap), soap_serialize_ns2__Query(soap, data), soap_begin_send(soap) || soap_put_ns2__Query(soap, data, "ns2:Query", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__Query * SOAP_FMAC4 soap_get_ns2__Query(struct soap*, struct ns2__Query *, const char*, const char*);

#ifndef soap_read_ns2__Query
#define soap_read_ns2__Query(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__Query(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__Query * SOAP_FMAC2 soap_instantiate_ns2__Query(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__Query * soap_new_ns2__Query(struct soap *soap, int n = -1) { return soap_instantiate_ns2__Query(soap, n, NULL, NULL, NULL); }

inline struct ns2__Query * soap_new_req_ns2__Query(struct soap *soap, unsigned char stationId, unsigned char valueType, LONG64 beginTime, LONG64 endTime, unsigned short count) { struct ns2__Query *_p = soap_instantiate_ns2__Query(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__Query(soap, _p); _p->stationId = stationId; _p->valueType = valueType; _p->beginTime = beginTime; _p->endTime = endTime; _p->count = count; } return _p; }

inline struct ns2__Query * soap_new_set_ns2__Query(struct soap *soap, unsigned char stationId, ns2__TagIdArray *tagId, unsigned char valueType, LONG64 beginTime, LONG64 endTime, unsigned short count) { struct ns2__Query *_p = soap_instantiate_ns2__Query(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__Query(soap, _p); _p->stationId = stationId; _p->tagId = tagId; _p->valueType = valueType; _p->beginTime = beginTime; _p->endTime = endTime; _p->count = count; } return _p; }

inline void soap_delete_ns2__Query(struct soap *soap, struct ns2__Query *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__Query(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__QueryResponse
#define SOAP_TYPE_ns2__QueryResponse (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__QueryResponse(struct soap*, struct ns2__QueryResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__QueryResponse(struct soap*, const struct ns2__QueryResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__QueryResponse(struct soap*, const char*, int, const struct ns2__QueryResponse *, const char*);
SOAP_FMAC3 struct ns2__QueryResponse * SOAP_FMAC4 soap_in_ns2__QueryResponse(struct soap*, const char*, struct ns2__QueryResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__QueryResponse(struct soap*, const struct ns2__QueryResponse *, const char*, const char*);

#ifndef soap_write_ns2__QueryResponse
#define soap_write_ns2__QueryResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__QueryResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__QueryResponse(soap, data, "ns2:QueryResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__QueryResponse * SOAP_FMAC4 soap_get_ns2__QueryResponse(struct soap*, struct ns2__QueryResponse *, const char*, const char*);

#ifndef soap_read_ns2__QueryResponse
#define soap_read_ns2__QueryResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__QueryResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__QueryResponse * SOAP_FMAC2 soap_instantiate_ns2__QueryResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__QueryResponse * soap_new_ns2__QueryResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__QueryResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__QueryResponse * soap_new_req_ns2__QueryResponse(struct soap *soap) { struct ns2__QueryResponse *_p = soap_instantiate_ns2__QueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__QueryResponse(soap, _p); } return _p; }

inline struct ns2__QueryResponse * soap_new_set_ns2__QueryResponse(struct soap *soap, ns2__TagValueArray *result) { struct ns2__QueryResponse *_p = soap_instantiate_ns2__QueryResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__QueryResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__QueryResponse(struct soap *soap, struct ns2__QueryResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__QueryResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__Read
#define SOAP_TYPE_ns2__Read (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__Read(struct soap*, struct ns2__Read *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__Read(struct soap*, const struct ns2__Read *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__Read(struct soap*, const char*, int, const struct ns2__Read *, const char*);
SOAP_FMAC3 struct ns2__Read * SOAP_FMAC4 soap_in_ns2__Read(struct soap*, const char*, struct ns2__Read *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__Read(struct soap*, const struct ns2__Read *, const char*, const char*);

#ifndef soap_write_ns2__Read
#define soap_write_ns2__Read(soap, data) ( soap_begin(soap), soap_serialize_ns2__Read(soap, data), soap_begin_send(soap) || soap_put_ns2__Read(soap, data, "ns2:Read", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__Read * SOAP_FMAC4 soap_get_ns2__Read(struct soap*, struct ns2__Read *, const char*, const char*);

#ifndef soap_read_ns2__Read
#define soap_read_ns2__Read(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__Read(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__Read * SOAP_FMAC2 soap_instantiate_ns2__Read(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__Read * soap_new_ns2__Read(struct soap *soap, int n = -1) { return soap_instantiate_ns2__Read(soap, n, NULL, NULL, NULL); }

inline struct ns2__Read * soap_new_req_ns2__Read(struct soap *soap, unsigned char stationId) { struct ns2__Read *_p = soap_instantiate_ns2__Read(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__Read(soap, _p); _p->stationId = stationId; } return _p; }

inline struct ns2__Read * soap_new_set_ns2__Read(struct soap *soap, unsigned char stationId, ns2__TagIdArray *tagId) { struct ns2__Read *_p = soap_instantiate_ns2__Read(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__Read(soap, _p); _p->stationId = stationId; _p->tagId = tagId; } return _p; }

inline void soap_delete_ns2__Read(struct soap *soap, struct ns2__Read *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__Read(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__ReadResponse
#define SOAP_TYPE_ns2__ReadResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__ReadResponse(struct soap*, struct ns2__ReadResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__ReadResponse(struct soap*, const struct ns2__ReadResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__ReadResponse(struct soap*, const char*, int, const struct ns2__ReadResponse *, const char*);
SOAP_FMAC3 struct ns2__ReadResponse * SOAP_FMAC4 soap_in_ns2__ReadResponse(struct soap*, const char*, struct ns2__ReadResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__ReadResponse(struct soap*, const struct ns2__ReadResponse *, const char*, const char*);

#ifndef soap_write_ns2__ReadResponse
#define soap_write_ns2__ReadResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__ReadResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__ReadResponse(soap, data, "ns2:ReadResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__ReadResponse * SOAP_FMAC4 soap_get_ns2__ReadResponse(struct soap*, struct ns2__ReadResponse *, const char*, const char*);

#ifndef soap_read_ns2__ReadResponse
#define soap_read_ns2__ReadResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__ReadResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__ReadResponse * SOAP_FMAC2 soap_instantiate_ns2__ReadResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__ReadResponse * soap_new_ns2__ReadResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__ReadResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__ReadResponse * soap_new_req_ns2__ReadResponse(struct soap *soap) { struct ns2__ReadResponse *_p = soap_instantiate_ns2__ReadResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__ReadResponse(soap, _p); } return _p; }

inline struct ns2__ReadResponse * soap_new_set_ns2__ReadResponse(struct soap *soap, ns2__TagValueArray *result) { struct ns2__ReadResponse *_p = soap_instantiate_ns2__ReadResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__ReadResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__ReadResponse(struct soap *soap, struct ns2__ReadResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__ReadResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__RemoveSubscription
#define SOAP_TYPE_ns2__RemoveSubscription (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__RemoveSubscription(struct soap*, struct ns2__RemoveSubscription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__RemoveSubscription(struct soap*, const struct ns2__RemoveSubscription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__RemoveSubscription(struct soap*, const char*, int, const struct ns2__RemoveSubscription *, const char*);
SOAP_FMAC3 struct ns2__RemoveSubscription * SOAP_FMAC4 soap_in_ns2__RemoveSubscription(struct soap*, const char*, struct ns2__RemoveSubscription *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__RemoveSubscription(struct soap*, const struct ns2__RemoveSubscription *, const char*, const char*);

#ifndef soap_write_ns2__RemoveSubscription
#define soap_write_ns2__RemoveSubscription(soap, data) ( soap_begin(soap), soap_serialize_ns2__RemoveSubscription(soap, data), soap_begin_send(soap) || soap_put_ns2__RemoveSubscription(soap, data, "ns2:RemoveSubscription", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__RemoveSubscription * SOAP_FMAC4 soap_get_ns2__RemoveSubscription(struct soap*, struct ns2__RemoveSubscription *, const char*, const char*);

#ifndef soap_read_ns2__RemoveSubscription
#define soap_read_ns2__RemoveSubscription(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__RemoveSubscription(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__RemoveSubscription * SOAP_FMAC2 soap_instantiate_ns2__RemoveSubscription(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__RemoveSubscription * soap_new_ns2__RemoveSubscription(struct soap *soap, int n = -1) { return soap_instantiate_ns2__RemoveSubscription(soap, n, NULL, NULL, NULL); }

inline struct ns2__RemoveSubscription * soap_new_req_ns2__RemoveSubscription(struct soap *soap, unsigned char stationId, int subId) { struct ns2__RemoveSubscription *_p = soap_instantiate_ns2__RemoveSubscription(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RemoveSubscription(soap, _p); _p->stationId = stationId; _p->subId = subId; } return _p; }

inline struct ns2__RemoveSubscription * soap_new_set_ns2__RemoveSubscription(struct soap *soap, unsigned char stationId, int subId) { struct ns2__RemoveSubscription *_p = soap_instantiate_ns2__RemoveSubscription(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RemoveSubscription(soap, _p); _p->stationId = stationId; _p->subId = subId; } return _p; }

inline void soap_delete_ns2__RemoveSubscription(struct soap *soap, struct ns2__RemoveSubscription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__RemoveSubscription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__RemoveSubscriptionResponse
#define SOAP_TYPE_ns2__RemoveSubscriptionResponse (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__RemoveSubscriptionResponse(struct soap*, struct ns2__RemoveSubscriptionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__RemoveSubscriptionResponse(struct soap*, const struct ns2__RemoveSubscriptionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__RemoveSubscriptionResponse(struct soap*, const char*, int, const struct ns2__RemoveSubscriptionResponse *, const char*);
SOAP_FMAC3 struct ns2__RemoveSubscriptionResponse * SOAP_FMAC4 soap_in_ns2__RemoveSubscriptionResponse(struct soap*, const char*, struct ns2__RemoveSubscriptionResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__RemoveSubscriptionResponse(struct soap*, const struct ns2__RemoveSubscriptionResponse *, const char*, const char*);

#ifndef soap_write_ns2__RemoveSubscriptionResponse
#define soap_write_ns2__RemoveSubscriptionResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__RemoveSubscriptionResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__RemoveSubscriptionResponse(soap, data, "ns2:RemoveSubscriptionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__RemoveSubscriptionResponse * SOAP_FMAC4 soap_get_ns2__RemoveSubscriptionResponse(struct soap*, struct ns2__RemoveSubscriptionResponse *, const char*, const char*);

#ifndef soap_read_ns2__RemoveSubscriptionResponse
#define soap_read_ns2__RemoveSubscriptionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__RemoveSubscriptionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__RemoveSubscriptionResponse * SOAP_FMAC2 soap_instantiate_ns2__RemoveSubscriptionResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__RemoveSubscriptionResponse * soap_new_ns2__RemoveSubscriptionResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__RemoveSubscriptionResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__RemoveSubscriptionResponse * soap_new_req_ns2__RemoveSubscriptionResponse(struct soap *soap, int result) { struct ns2__RemoveSubscriptionResponse *_p = soap_instantiate_ns2__RemoveSubscriptionResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RemoveSubscriptionResponse(soap, _p); _p->result = result; } return _p; }

inline struct ns2__RemoveSubscriptionResponse * soap_new_set_ns2__RemoveSubscriptionResponse(struct soap *soap, int result) { struct ns2__RemoveSubscriptionResponse *_p = soap_instantiate_ns2__RemoveSubscriptionResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RemoveSubscriptionResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__RemoveSubscriptionResponse(struct soap *soap, struct ns2__RemoveSubscriptionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__RemoveSubscriptionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__RefreshSubscription
#define SOAP_TYPE_ns2__RefreshSubscription (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__RefreshSubscription(struct soap*, struct ns2__RefreshSubscription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__RefreshSubscription(struct soap*, const struct ns2__RefreshSubscription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__RefreshSubscription(struct soap*, const char*, int, const struct ns2__RefreshSubscription *, const char*);
SOAP_FMAC3 struct ns2__RefreshSubscription * SOAP_FMAC4 soap_in_ns2__RefreshSubscription(struct soap*, const char*, struct ns2__RefreshSubscription *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__RefreshSubscription(struct soap*, const struct ns2__RefreshSubscription *, const char*, const char*);

#ifndef soap_write_ns2__RefreshSubscription
#define soap_write_ns2__RefreshSubscription(soap, data) ( soap_begin(soap), soap_serialize_ns2__RefreshSubscription(soap, data), soap_begin_send(soap) || soap_put_ns2__RefreshSubscription(soap, data, "ns2:RefreshSubscription", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__RefreshSubscription * SOAP_FMAC4 soap_get_ns2__RefreshSubscription(struct soap*, struct ns2__RefreshSubscription *, const char*, const char*);

#ifndef soap_read_ns2__RefreshSubscription
#define soap_read_ns2__RefreshSubscription(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__RefreshSubscription(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__RefreshSubscription * SOAP_FMAC2 soap_instantiate_ns2__RefreshSubscription(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__RefreshSubscription * soap_new_ns2__RefreshSubscription(struct soap *soap, int n = -1) { return soap_instantiate_ns2__RefreshSubscription(soap, n, NULL, NULL, NULL); }

inline struct ns2__RefreshSubscription * soap_new_req_ns2__RefreshSubscription(struct soap *soap, unsigned char stationId, int subId) { struct ns2__RefreshSubscription *_p = soap_instantiate_ns2__RefreshSubscription(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RefreshSubscription(soap, _p); _p->stationId = stationId; _p->subId = subId; } return _p; }

inline struct ns2__RefreshSubscription * soap_new_set_ns2__RefreshSubscription(struct soap *soap, unsigned char stationId, int subId) { struct ns2__RefreshSubscription *_p = soap_instantiate_ns2__RefreshSubscription(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RefreshSubscription(soap, _p); _p->stationId = stationId; _p->subId = subId; } return _p; }

inline void soap_delete_ns2__RefreshSubscription(struct soap *soap, struct ns2__RefreshSubscription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__RefreshSubscription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__RefreshSubscriptionResponse
#define SOAP_TYPE_ns2__RefreshSubscriptionResponse (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__RefreshSubscriptionResponse(struct soap*, struct ns2__RefreshSubscriptionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__RefreshSubscriptionResponse(struct soap*, const struct ns2__RefreshSubscriptionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__RefreshSubscriptionResponse(struct soap*, const char*, int, const struct ns2__RefreshSubscriptionResponse *, const char*);
SOAP_FMAC3 struct ns2__RefreshSubscriptionResponse * SOAP_FMAC4 soap_in_ns2__RefreshSubscriptionResponse(struct soap*, const char*, struct ns2__RefreshSubscriptionResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__RefreshSubscriptionResponse(struct soap*, const struct ns2__RefreshSubscriptionResponse *, const char*, const char*);

#ifndef soap_write_ns2__RefreshSubscriptionResponse
#define soap_write_ns2__RefreshSubscriptionResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__RefreshSubscriptionResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__RefreshSubscriptionResponse(soap, data, "ns2:RefreshSubscriptionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__RefreshSubscriptionResponse * SOAP_FMAC4 soap_get_ns2__RefreshSubscriptionResponse(struct soap*, struct ns2__RefreshSubscriptionResponse *, const char*, const char*);

#ifndef soap_read_ns2__RefreshSubscriptionResponse
#define soap_read_ns2__RefreshSubscriptionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__RefreshSubscriptionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__RefreshSubscriptionResponse * SOAP_FMAC2 soap_instantiate_ns2__RefreshSubscriptionResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__RefreshSubscriptionResponse * soap_new_ns2__RefreshSubscriptionResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__RefreshSubscriptionResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__RefreshSubscriptionResponse * soap_new_req_ns2__RefreshSubscriptionResponse(struct soap *soap) { struct ns2__RefreshSubscriptionResponse *_p = soap_instantiate_ns2__RefreshSubscriptionResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RefreshSubscriptionResponse(soap, _p); } return _p; }

inline struct ns2__RefreshSubscriptionResponse * soap_new_set_ns2__RefreshSubscriptionResponse(struct soap *soap, ns2__TagValueArray *result) { struct ns2__RefreshSubscriptionResponse *_p = soap_instantiate_ns2__RefreshSubscriptionResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__RefreshSubscriptionResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__RefreshSubscriptionResponse(struct soap *soap, struct ns2__RefreshSubscriptionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__RefreshSubscriptionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__AddSubscriptionItem
#define SOAP_TYPE_ns2__AddSubscriptionItem (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__AddSubscriptionItem(struct soap*, struct ns2__AddSubscriptionItem *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__AddSubscriptionItem(struct soap*, const struct ns2__AddSubscriptionItem *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__AddSubscriptionItem(struct soap*, const char*, int, const struct ns2__AddSubscriptionItem *, const char*);
SOAP_FMAC3 struct ns2__AddSubscriptionItem * SOAP_FMAC4 soap_in_ns2__AddSubscriptionItem(struct soap*, const char*, struct ns2__AddSubscriptionItem *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__AddSubscriptionItem(struct soap*, const struct ns2__AddSubscriptionItem *, const char*, const char*);

#ifndef soap_write_ns2__AddSubscriptionItem
#define soap_write_ns2__AddSubscriptionItem(soap, data) ( soap_begin(soap), soap_serialize_ns2__AddSubscriptionItem(soap, data), soap_begin_send(soap) || soap_put_ns2__AddSubscriptionItem(soap, data, "ns2:AddSubscriptionItem", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__AddSubscriptionItem * SOAP_FMAC4 soap_get_ns2__AddSubscriptionItem(struct soap*, struct ns2__AddSubscriptionItem *, const char*, const char*);

#ifndef soap_read_ns2__AddSubscriptionItem
#define soap_read_ns2__AddSubscriptionItem(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__AddSubscriptionItem(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__AddSubscriptionItem * SOAP_FMAC2 soap_instantiate_ns2__AddSubscriptionItem(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__AddSubscriptionItem * soap_new_ns2__AddSubscriptionItem(struct soap *soap, int n = -1) { return soap_instantiate_ns2__AddSubscriptionItem(soap, n, NULL, NULL, NULL); }

inline struct ns2__AddSubscriptionItem * soap_new_req_ns2__AddSubscriptionItem(struct soap *soap, unsigned char stationId, int subId) { struct ns2__AddSubscriptionItem *_p = soap_instantiate_ns2__AddSubscriptionItem(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__AddSubscriptionItem(soap, _p); _p->stationId = stationId; _p->subId = subId; } return _p; }

inline struct ns2__AddSubscriptionItem * soap_new_set_ns2__AddSubscriptionItem(struct soap *soap, unsigned char stationId, int subId, ns2__TagIdArray *tagId) { struct ns2__AddSubscriptionItem *_p = soap_instantiate_ns2__AddSubscriptionItem(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__AddSubscriptionItem(soap, _p); _p->stationId = stationId; _p->subId = subId; _p->tagId = tagId; } return _p; }

inline void soap_delete_ns2__AddSubscriptionItem(struct soap *soap, struct ns2__AddSubscriptionItem *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__AddSubscriptionItem(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__AddSubscriptionItemResponse
#define SOAP_TYPE_ns2__AddSubscriptionItemResponse (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__AddSubscriptionItemResponse(struct soap*, struct ns2__AddSubscriptionItemResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__AddSubscriptionItemResponse(struct soap*, const struct ns2__AddSubscriptionItemResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__AddSubscriptionItemResponse(struct soap*, const char*, int, const struct ns2__AddSubscriptionItemResponse *, const char*);
SOAP_FMAC3 struct ns2__AddSubscriptionItemResponse * SOAP_FMAC4 soap_in_ns2__AddSubscriptionItemResponse(struct soap*, const char*, struct ns2__AddSubscriptionItemResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__AddSubscriptionItemResponse(struct soap*, const struct ns2__AddSubscriptionItemResponse *, const char*, const char*);

#ifndef soap_write_ns2__AddSubscriptionItemResponse
#define soap_write_ns2__AddSubscriptionItemResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__AddSubscriptionItemResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__AddSubscriptionItemResponse(soap, data, "ns2:AddSubscriptionItemResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__AddSubscriptionItemResponse * SOAP_FMAC4 soap_get_ns2__AddSubscriptionItemResponse(struct soap*, struct ns2__AddSubscriptionItemResponse *, const char*, const char*);

#ifndef soap_read_ns2__AddSubscriptionItemResponse
#define soap_read_ns2__AddSubscriptionItemResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__AddSubscriptionItemResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__AddSubscriptionItemResponse * SOAP_FMAC2 soap_instantiate_ns2__AddSubscriptionItemResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__AddSubscriptionItemResponse * soap_new_ns2__AddSubscriptionItemResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__AddSubscriptionItemResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__AddSubscriptionItemResponse * soap_new_req_ns2__AddSubscriptionItemResponse(struct soap *soap, int result) { struct ns2__AddSubscriptionItemResponse *_p = soap_instantiate_ns2__AddSubscriptionItemResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__AddSubscriptionItemResponse(soap, _p); _p->result = result; } return _p; }

inline struct ns2__AddSubscriptionItemResponse * soap_new_set_ns2__AddSubscriptionItemResponse(struct soap *soap, int result) { struct ns2__AddSubscriptionItemResponse *_p = soap_instantiate_ns2__AddSubscriptionItemResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__AddSubscriptionItemResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__AddSubscriptionItemResponse(struct soap *soap, struct ns2__AddSubscriptionItemResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__AddSubscriptionItemResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__CreateSubscription
#define SOAP_TYPE_ns2__CreateSubscription (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__CreateSubscription(struct soap*, struct ns2__CreateSubscription *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__CreateSubscription(struct soap*, const struct ns2__CreateSubscription *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__CreateSubscription(struct soap*, const char*, int, const struct ns2__CreateSubscription *, const char*);
SOAP_FMAC3 struct ns2__CreateSubscription * SOAP_FMAC4 soap_in_ns2__CreateSubscription(struct soap*, const char*, struct ns2__CreateSubscription *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__CreateSubscription(struct soap*, const struct ns2__CreateSubscription *, const char*, const char*);

#ifndef soap_write_ns2__CreateSubscription
#define soap_write_ns2__CreateSubscription(soap, data) ( soap_begin(soap), soap_serialize_ns2__CreateSubscription(soap, data), soap_begin_send(soap) || soap_put_ns2__CreateSubscription(soap, data, "ns2:CreateSubscription", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__CreateSubscription * SOAP_FMAC4 soap_get_ns2__CreateSubscription(struct soap*, struct ns2__CreateSubscription *, const char*, const char*);

#ifndef soap_read_ns2__CreateSubscription
#define soap_read_ns2__CreateSubscription(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__CreateSubscription(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__CreateSubscription * SOAP_FMAC2 soap_instantiate_ns2__CreateSubscription(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__CreateSubscription * soap_new_ns2__CreateSubscription(struct soap *soap, int n = -1) { return soap_instantiate_ns2__CreateSubscription(soap, n, NULL, NULL, NULL); }

inline struct ns2__CreateSubscription * soap_new_req_ns2__CreateSubscription(struct soap *soap, unsigned char stationId) { struct ns2__CreateSubscription *_p = soap_instantiate_ns2__CreateSubscription(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__CreateSubscription(soap, _p); _p->stationId = stationId; } return _p; }

inline struct ns2__CreateSubscription * soap_new_set_ns2__CreateSubscription(struct soap *soap, unsigned char stationId) { struct ns2__CreateSubscription *_p = soap_instantiate_ns2__CreateSubscription(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__CreateSubscription(soap, _p); _p->stationId = stationId; } return _p; }

inline void soap_delete_ns2__CreateSubscription(struct soap *soap, struct ns2__CreateSubscription *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__CreateSubscription(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns2__CreateSubscriptionResponse
#define SOAP_TYPE_ns2__CreateSubscriptionResponse (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns2__CreateSubscriptionResponse(struct soap*, struct ns2__CreateSubscriptionResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns2__CreateSubscriptionResponse(struct soap*, const struct ns2__CreateSubscriptionResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns2__CreateSubscriptionResponse(struct soap*, const char*, int, const struct ns2__CreateSubscriptionResponse *, const char*);
SOAP_FMAC3 struct ns2__CreateSubscriptionResponse * SOAP_FMAC4 soap_in_ns2__CreateSubscriptionResponse(struct soap*, const char*, struct ns2__CreateSubscriptionResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns2__CreateSubscriptionResponse(struct soap*, const struct ns2__CreateSubscriptionResponse *, const char*, const char*);

#ifndef soap_write_ns2__CreateSubscriptionResponse
#define soap_write_ns2__CreateSubscriptionResponse(soap, data) ( soap_begin(soap), soap_serialize_ns2__CreateSubscriptionResponse(soap, data), soap_begin_send(soap) || soap_put_ns2__CreateSubscriptionResponse(soap, data, "ns2:CreateSubscriptionResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns2__CreateSubscriptionResponse * SOAP_FMAC4 soap_get_ns2__CreateSubscriptionResponse(struct soap*, struct ns2__CreateSubscriptionResponse *, const char*, const char*);

#ifndef soap_read_ns2__CreateSubscriptionResponse
#define soap_read_ns2__CreateSubscriptionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns2__CreateSubscriptionResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns2__CreateSubscriptionResponse * SOAP_FMAC2 soap_instantiate_ns2__CreateSubscriptionResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns2__CreateSubscriptionResponse * soap_new_ns2__CreateSubscriptionResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns2__CreateSubscriptionResponse(soap, n, NULL, NULL, NULL); }

inline struct ns2__CreateSubscriptionResponse * soap_new_req_ns2__CreateSubscriptionResponse(struct soap *soap, int result) { struct ns2__CreateSubscriptionResponse *_p = soap_instantiate_ns2__CreateSubscriptionResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__CreateSubscriptionResponse(soap, _p); _p->result = result; } return _p; }

inline struct ns2__CreateSubscriptionResponse * soap_new_set_ns2__CreateSubscriptionResponse(struct soap *soap, int result) { struct ns2__CreateSubscriptionResponse *_p = soap_instantiate_ns2__CreateSubscriptionResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns2__CreateSubscriptionResponse(soap, _p); _p->result = result; } return _p; }

inline void soap_delete_ns2__CreateSubscriptionResponse(struct soap *soap, struct ns2__CreateSubscriptionResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns2__CreateSubscriptionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTons2__TagValueArray
#define SOAP_TYPE_PointerTons2__TagValueArray (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__TagValueArray(struct soap*, ns2__TagValueArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__TagValueArray(struct soap*, const char *, int, ns2__TagValueArray *const*, const char *);
SOAP_FMAC3 ns2__TagValueArray ** SOAP_FMAC4 soap_in_PointerTons2__TagValueArray(struct soap*, const char*, ns2__TagValueArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__TagValueArray(struct soap*, ns2__TagValueArray *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__TagValueArray
#define soap_write_PointerTons2__TagValueArray(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__TagValueArray(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__TagValueArray(soap, data, "ns2:TagValueArray", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__TagValueArray ** SOAP_FMAC4 soap_get_PointerTons2__TagValueArray(struct soap*, ns2__TagValueArray **, const char*, const char*);

#ifndef soap_read_PointerTons2__TagValueArray
#define soap_read_PointerTons2__TagValueArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__TagValueArray(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__TagIdArray
#define SOAP_TYPE_PointerTons2__TagIdArray (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__TagIdArray(struct soap*, ns2__TagIdArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__TagIdArray(struct soap*, const char *, int, ns2__TagIdArray *const*, const char *);
SOAP_FMAC3 ns2__TagIdArray ** SOAP_FMAC4 soap_in_PointerTons2__TagIdArray(struct soap*, const char*, ns2__TagIdArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__TagIdArray(struct soap*, ns2__TagIdArray *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__TagIdArray
#define soap_write_PointerTons2__TagIdArray(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__TagIdArray(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__TagIdArray(soap, data, "ns2:TagIdArray", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__TagIdArray ** SOAP_FMAC4 soap_get_PointerTons2__TagIdArray(struct soap*, ns2__TagIdArray **, const char*, const char*);

#ifndef soap_read_PointerTons2__TagIdArray
#define soap_read_PointerTons2__TagIdArray(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__TagIdArray(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons2__TagValue
#define SOAP_TYPE_PointerTons2__TagValue (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons2__TagValue(struct soap*, ns2__TagValue *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons2__TagValue(struct soap*, const char *, int, ns2__TagValue *const*, const char *);
SOAP_FMAC3 ns2__TagValue ** SOAP_FMAC4 soap_in_PointerTons2__TagValue(struct soap*, const char*, ns2__TagValue **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons2__TagValue(struct soap*, ns2__TagValue *const*, const char*, const char*);

#ifndef soap_write_PointerTons2__TagValue
#define soap_write_PointerTons2__TagValue(soap, data) ( soap_begin(soap), soap_serialize_PointerTons2__TagValue(soap, data), soap_begin_send(soap) || soap_put_PointerTons2__TagValue(soap, data, "ns2:TagValue", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns2__TagValue ** SOAP_FMAC4 soap_get_PointerTons2__TagValue(struct soap*, ns2__TagValue **, const char*, const char*);

#ifndef soap_read_PointerTons2__TagValue
#define soap_read_PointerTons2__TagValue(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons2__TagValue(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_begin(soap), soap_serialize_PointerTostd__string(soap, data), soap_begin_send(soap) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin(soap), soap_serialize__QName(soap, data), soap_begin_send(soap) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin(soap), soap_serialize_string(soap, data), soap_begin_send(soap) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_std__vectorTemplateOfint
#define SOAP_TYPE_std__vectorTemplateOfint (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfint(struct soap*, std::vector<int >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfint(struct soap*, const std::vector<int >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfint(struct soap*, const char*, int, const std::vector<int >*, const char*);
SOAP_FMAC3 std::vector<int >* SOAP_FMAC4 soap_in_std__vectorTemplateOfint(struct soap*, const char*, std::vector<int >*, const char*);
SOAP_FMAC1 std::vector<int > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfint(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<int > * soap_new_std__vectorTemplateOfint(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfint(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfint(struct soap *soap, std::vector<int >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfint(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons2__TagValue
#define SOAP_TYPE_std__vectorTemplateOfPointerTons2__TagValue (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons2__TagValue(struct soap*, std::vector<ns2__TagValue * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons2__TagValue(struct soap*, const std::vector<ns2__TagValue * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons2__TagValue(struct soap*, const char*, int, const std::vector<ns2__TagValue * >*, const char*);
SOAP_FMAC3 std::vector<ns2__TagValue * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons2__TagValue(struct soap*, const char*, std::vector<ns2__TagValue * >*, const char*);
SOAP_FMAC1 std::vector<ns2__TagValue * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons2__TagValue(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns2__TagValue * > * soap_new_std__vectorTemplateOfPointerTons2__TagValue(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons2__TagValue(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons2__TagValue(struct soap *soap, std::vector<ns2__TagValue * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons2__TagValue(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
