/* ortMatlab.h
   Generated by gSOAP 2.8.14 from rdlite.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/
#include "mex.h"
#include "ortStub.h"

struct soapSparseArray{
  int *ir;
  int *jc;
  double *pr;
  int num_columns;
  int num_rows;
  int nzmax;
};

mxArray* c_to_mx_soapSparseArray(struct soapSparseArray);

mxArray* mx_to_c_soapSparseArray(const mxArray *, struct soapSparseArray *);

mxArray* c_to_mx_byte(char );
void mx_to_c_byte(const mxArray *, char *);

mxArray* c_to_mx_short(short );
void mx_to_c_short(const mxArray *, short *);

mxArray* c_to_mx_int(int );
void mx_to_c_int(const mxArray *, int *);

mxArray* c_to_mx_LONG64(LONG64 );
void mx_to_c_LONG64(const mxArray *, LONG64 *);

mxArray* c_to_mx_xsd__unsignedByte(unsigned char );
void mx_to_c_xsd__unsignedByte(const mxArray *, unsigned char *);

mxArray* c_to_mx_unsignedByte(unsigned char );
void mx_to_c_unsignedByte(const mxArray *, unsigned char *);

mxArray* c_to_mx_unsignedShort(unsigned short );
void mx_to_c_unsignedShort(const mxArray *, unsigned short *);

mxArray* c_to_mx_unsignedInt(unsigned int );
void mx_to_c_unsignedInt(const mxArray *, unsigned int *);

mxArray* c_to_mx_ns2__QueryResponse(struct ns2__QueryResponse );

void mx_to_c_ns2__QueryResponse(const mxArray*, struct ns2__QueryResponse *);

mxArray* c_to_mx_ns2__ReadResponse(struct ns2__ReadResponse );

void mx_to_c_ns2__ReadResponse(const mxArray*, struct ns2__ReadResponse *);

mxArray* c_to_mx_PointerTons2__Query(struct ns2__Query *);

void mx_to_c_PointerTons2__Query(const mxArray*,struct ns2__Query **);

mxArray* c_to_mx_PointerTons2__QueryResponse(struct ns2__QueryResponse *);

void mx_to_c_PointerTons2__QueryResponse(const mxArray*,struct ns2__QueryResponse **);

mxArray* c_to_mx_PointerTons2__Read(struct ns2__Read *);

void mx_to_c_PointerTons2__Read(const mxArray*,struct ns2__Read **);

mxArray* c_to_mx_PointerTons2__ReadResponse(struct ns2__ReadResponse *);

void mx_to_c_PointerTons2__ReadResponse(const mxArray*,struct ns2__ReadResponse **);

mxArray* c_to_mx_PointerTostd__string(std::string *);

void mx_to_c_PointerTostd__string(const mxArray*,std::string **);

mxArray* c_to_mx_PointerTons2__TagIdArray(ns2__TagIdArray *);

void mx_to_c_PointerTons2__TagIdArray(const mxArray*,ns2__TagIdArray **);

mxArray* c_to_mx_PointerTons2__TagValueArray(ns2__TagValueArray *);

void mx_to_c_PointerTons2__TagValueArray(const mxArray*,ns2__TagValueArray **);

mxArray* c_to_mx_PointerTons2__TagValue(ns2__TagValue *);

void mx_to_c_PointerTons2__TagValue(const mxArray*,ns2__TagValue **);

mxArray* c_to_mx__QName(char *);

void mx_to_c__QName(const mxArray*,char **);

mxArray* c_to_mx_string(char *);

void mx_to_c_string(const mxArray*,char **);
