/* soaprdbserviceSoapProxy.cpp
   Generated by gSOAP 2.8.14 from ss.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soaprdbserviceSoapProxy.h"

rdbserviceSoapProxy::rdbserviceSoapProxy()
{	rdbserviceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

rdbserviceSoapProxy::rdbserviceSoapProxy(const struct soap &_soap) : soap(_soap)
{ }

rdbserviceSoapProxy::rdbserviceSoapProxy(const char *url)
{	rdbserviceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

rdbserviceSoapProxy::rdbserviceSoapProxy(soap_mode iomode)
{	rdbserviceSoapProxy_init(iomode, iomode);
}

rdbserviceSoapProxy::rdbserviceSoapProxy(const char *url, soap_mode iomode)
{	rdbserviceSoapProxy_init(iomode, iomode);
	soap_endpoint = url;
}

rdbserviceSoapProxy::rdbserviceSoapProxy(soap_mode imode, soap_mode omode)
{	rdbserviceSoapProxy_init(imode, omode);
}

rdbserviceSoapProxy::~rdbserviceSoapProxy()
{ }

void rdbserviceSoapProxy::rdbserviceSoapProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://www.w3.org/2003/05/soap-envelope", "http://schemas.xmlsoap.org/soap/envelope/", NULL},
	{"SOAP-ENC", "http://www.w3.org/2003/05/soap-encoding", "http://schemas.xmlsoap.org/soap/encoding/", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://tempuri.org/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void rdbserviceSoapProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void rdbserviceSoapProxy::reset()
{	destroy();
	soap_done(this);
	soap_init(this);
	rdbserviceSoapProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void rdbserviceSoapProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *rdbserviceSoapProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *rdbserviceSoapProxy::soap_fault()
{	return this->fault;
}

const char *rdbserviceSoapProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *rdbserviceSoapProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int rdbserviceSoapProxy::soap_close_socket()
{	return soap_closesock(this);
}

int rdbserviceSoapProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void rdbserviceSoapProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void rdbserviceSoapProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *rdbserviceSoapProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int rdbserviceSoapProxy::HelloWorld2(const char *endpoint, const char *soap_action, _ns1__HelloWorld2 *ns1__HelloWorld2, _ns1__HelloWorld2Response *ns1__HelloWorld2Response)
{	struct soap *soap = this;
	struct __ns1__HelloWorld2 soap_tmp___ns1__HelloWorld2;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://rdb.csic711.net/rdbservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/HelloWorld2";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__HelloWorld2.ns1__HelloWorld2 = ns1__HelloWorld2;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__HelloWorld2(soap, &soap_tmp___ns1__HelloWorld2);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__HelloWorld2(soap, &soap_tmp___ns1__HelloWorld2, "-ns1:HelloWorld2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__HelloWorld2(soap, &soap_tmp___ns1__HelloWorld2, "-ns1:HelloWorld2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__HelloWorld2Response)
		return soap_closesock(soap);
	ns1__HelloWorld2Response->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__HelloWorld2Response->soap_get(soap, "ns1:HelloWorld2Response", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int rdbserviceSoapProxy::HelloWorld(const char *endpoint, const char *soap_action, _ns1__HelloWorld *ns1__HelloWorld, _ns1__HelloWorldResponse *ns1__HelloWorldResponse)
{	struct soap *soap = this;
	struct __ns1__HelloWorld soap_tmp___ns1__HelloWorld;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://rdb.csic711.net/rdbservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/HelloWorld";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__HelloWorld.ns1__HelloWorld = ns1__HelloWorld;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__HelloWorld(soap, &soap_tmp___ns1__HelloWorld);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__HelloWorld(soap, &soap_tmp___ns1__HelloWorld, "-ns1:HelloWorld", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__HelloWorld(soap, &soap_tmp___ns1__HelloWorld, "-ns1:HelloWorld", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__HelloWorldResponse)
		return soap_closesock(soap);
	ns1__HelloWorldResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__HelloWorldResponse->soap_get(soap, "ns1:HelloWorldResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int rdbserviceSoapProxy::GetSum(const char *endpoint, const char *soap_action, _ns1__GetSum *ns1__GetSum, _ns1__GetSumResponse *ns1__GetSumResponse)
{	struct soap *soap = this;
	struct __ns1__GetSum soap_tmp___ns1__GetSum;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://rdb.csic711.net/rdbservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetSum";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSum.ns1__GetSum = ns1__GetSum;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSum(soap, &soap_tmp___ns1__GetSum);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSum(soap, &soap_tmp___ns1__GetSum, "-ns1:GetSum", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSum(soap, &soap_tmp___ns1__GetSum, "-ns1:GetSum", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetSumResponse)
		return soap_closesock(soap);
	ns1__GetSumResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSumResponse->soap_get(soap, "ns1:GetSumResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int rdbserviceSoapProxy::HelloWorld2_(const char *endpoint, const char *soap_action, _ns1__HelloWorld2 *ns1__HelloWorld2, _ns1__HelloWorld2Response *ns1__HelloWorld2Response)
{	struct soap *soap = this;
	struct __ns1__HelloWorld2_ soap_tmp___ns1__HelloWorld2_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://rdb.csic711.net/rdbservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/HelloWorld2";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__HelloWorld2_.ns1__HelloWorld2 = ns1__HelloWorld2;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__HelloWorld2_(soap, &soap_tmp___ns1__HelloWorld2_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__HelloWorld2_(soap, &soap_tmp___ns1__HelloWorld2_, "-ns1:HelloWorld2", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__HelloWorld2_(soap, &soap_tmp___ns1__HelloWorld2_, "-ns1:HelloWorld2", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__HelloWorld2Response)
		return soap_closesock(soap);
	ns1__HelloWorld2Response->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__HelloWorld2Response->soap_get(soap, "ns1:HelloWorld2Response", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int rdbserviceSoapProxy::HelloWorld_(const char *endpoint, const char *soap_action, _ns1__HelloWorld *ns1__HelloWorld, _ns1__HelloWorldResponse *ns1__HelloWorldResponse)
{	struct soap *soap = this;
	struct __ns1__HelloWorld_ soap_tmp___ns1__HelloWorld_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://rdb.csic711.net/rdbservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/HelloWorld";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__HelloWorld_.ns1__HelloWorld = ns1__HelloWorld;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__HelloWorld_(soap, &soap_tmp___ns1__HelloWorld_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__HelloWorld_(soap, &soap_tmp___ns1__HelloWorld_, "-ns1:HelloWorld", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__HelloWorld_(soap, &soap_tmp___ns1__HelloWorld_, "-ns1:HelloWorld", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__HelloWorldResponse)
		return soap_closesock(soap);
	ns1__HelloWorldResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__HelloWorldResponse->soap_get(soap, "ns1:HelloWorldResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int rdbserviceSoapProxy::GetSum_(const char *endpoint, const char *soap_action, _ns1__GetSum *ns1__GetSum, _ns1__GetSumResponse *ns1__GetSumResponse)
{	struct soap *soap = this;
	struct __ns1__GetSum_ soap_tmp___ns1__GetSum_;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://rdb.csic711.net/rdbservice.asmx";
	if (soap_action == NULL)
		soap_action = "http://tempuri.org/GetSum";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__GetSum_.ns1__GetSum = ns1__GetSum;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__GetSum_(soap, &soap_tmp___ns1__GetSum_);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetSum_(soap, &soap_tmp___ns1__GetSum_, "-ns1:GetSum", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetSum_(soap, &soap_tmp___ns1__GetSum_, "-ns1:GetSum", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__GetSumResponse)
		return soap_closesock(soap);
	ns1__GetSumResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetSumResponse->soap_get(soap, "ns1:GetSumResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
