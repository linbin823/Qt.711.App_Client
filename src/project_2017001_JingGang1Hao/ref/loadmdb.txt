 private void LoadMDB()
        {
            if (Connect())
            {
                openFileDialog1.FileName = "";
                openFileDialog1.Filter = "Access files (*.mdb)|*.mdb";
                if (openFileDialog1.ShowDialog() == DialogResult.OK)
                {
                    string connstr = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source=" + openFileDialog1.FileName + ";Persist Security Info=False";

                    //连接字符串
                    OleDbConnection conn = new OleDbConnection(connstr);
                    conn.Open();
                    try
                    {
                        OleDbCommand queryCommand1 = conn.CreateCommand();
                        OleDbCommand queryCommand2 = conn.CreateCommand();
                        OleDbCommand queryCommand3 = conn.CreateCommand();

                        queryCommand1.CommandText = "select * from config";
                        OleDbDataReader dr1 = queryCommand1.ExecuteReader();
                        queryCommand2.CommandText = "select * from consolepage";
                        OleDbDataReader dr2 = queryCommand2.ExecuteReader();
                        queryCommand3.CommandText = "select * from gateway";
                        OleDbDataReader dr3 = queryCommand3.ExecuteReader();

                        ArrayList tagList = new ArrayList();
                        while (dr1.Read())
                        {
                            try
                            {
                                int v = 0;
                                string sys_id = dr1.GetValue(dr1.GetOrdinal("测点号")).ToString();
                                int system_id = int.TryParse(dr1.GetValue(dr1.GetOrdinal("系统编号")).ToString(), out v) ? v : 0;
                                int station_id = int.TryParse(dr1.GetValue(dr1.GetOrdinal("站ID")).ToString(), out v) ? v : 0;
                                int module_id = int.TryParse(dr1.GetValue(dr1.GetOrdinal("IO模块ID")).ToString(), out v) ? v : 0;
                                int arg_id = int.TryParse(dr1.GetValue(dr1.GetOrdinal("点号")).ToString(), out v) ? v - 1 : 0;
                                string nameChn = dr1.GetValue(dr1.GetOrdinal("测点名称")).ToString();
                                //string nameEng = dr1.GetValue(dr1.GetOrdinal("测点名称_en")).ToString();
                                string nameEng = "<@" + dr1.GetValue(dr1.GetOrdinal("站名称")).ToString() + "@> [@" + dr1.GetValue(dr1.GetOrdinal("IO模块类型")).ToString() + "@]";

                                string dataTypeStr = dr1.GetValue(dr1.GetOrdinal("类型")).ToString();
                                byte dataType = (byte)(((dataTypeStr.Trim() == "开关量输入") || (dataTypeStr.Trim() == "开关量输出") || (dataTypeStr.Trim() == "继电器输出")) ? 11 : 2);

                                float v1 = 0;
                                float min = float.TryParse(dr1.GetValue(dr1.GetOrdinal("测量量程最小值")).ToString(), out v1) ? v1 : 0;
                                float max = float.TryParse(dr1.GetValue(dr1.GetOrdinal("测量量程最大值")).ToString(), out v1) ? v1 : 0;
                                if (min == max)
                                {
                                    min = 0;
                                    max = 1;
                                }

                                string unit = dr1.GetValue(dr1.GetOrdinal("单位")).ToString();

                                int v2 = 0;
                                byte factor=0;
                                if (int.TryParse(dr1.GetValue(dr1.GetOrdinal("阶码")).ToString(), out v2))
                                {
                                    if (v2 >= 0)
                                        factor = (byte)v2;
                                    else
                                        factor = (byte)(128 - v2);
                                }
 
                                int id = (system_id << 16) + (station_id << 9) + (module_id << 5) + arg_id;

                                TagBlock value = new TagBlock(null, 0);
                                value.ID = id;
                                value.SysID = sys_id;
                                value.NameEng = nameEng;
                                value.NameChn = nameChn;
                                value.DataType = dataType;
                                value.Min = min;
                                value.Max = max;
                                value.Unit = unit;
                                value.Factor = factor;
                                tagList.Add(value);
                            }
                            catch (Exception) { };
                        }
                        ArrayList pageList = new ArrayList();//分页显示
                        while (dr2.Read())
                        {
                            try
                            {
                                int v = 0;
                                string nameChn = dr2.GetValue(dr2.GetOrdinal("页面名称")).ToString();
                                string nameEng = dr2.GetValue(dr2.GetOrdinal("页面名称_en")).ToString();
                                int pageNo = int.TryParse(dr2.GetValue(dr2.GetOrdinal("页码")).ToString(), out v) ? v : 0;
                                int no = int.TryParse(dr2.GetValue(dr2.GetOrdinal("序号")).ToString(), out v) ? v : 0;
                                string sys_id = dr2.GetValue(dr2.GetOrdinal("测点号")).ToString();

                                PageBlock value = new PageBlock(null);
                                value.PageNo = pageNo;
                                value.No = no;
                                value.NameChn = nameChn;
                                value.NameEng = nameEng;
                                value.SysID = sys_id;
                                pageList.Add(value);
                            }
                            catch (Exception) { };
                        }

                        ArrayList gateList = new ArrayList();//网关参数
                        while (dr3.Read())
                        {
                            try
                            {
                                byte v = 0;
                                string name = dr3.GetValue(dr3.GetOrdinal("名称")).ToString();
                                string localHost1 = dr3.GetValue(dr3.GetOrdinal("IP地址1")).ToString();
                                string localHost2 = dr3.GetValue(dr3.GetOrdinal("IP地址2")).ToString();
                                byte station = byte.TryParse(dr3.GetValue(dr3.GetOrdinal("站ID")).ToString(), out v) ? v : (byte)0;
                                GateBlock value = new GateBlock(null);
                                value.Name = name;
                                value.LocalHost1 = localHost1;
                                value.LocalHost2 = localHost2;
                                value.Station = station;
                                gateList.Add(value);
                            }
                            catch (Exception) { };
                        }
                        try
                        {
                            config.Stop();
                            config.SetTagList(tagList);
                            config.SetPageList(pageList);
                            config.SetGateList(gateList);
                        }
                        catch (Exception) { };
                        MessageBox.Show("导入文件完成...");
                    }
                    catch
                    {
                        MessageBox.Show("导入文件失败...");
                    }

                }
                DisconnectRemoting();
            }
            else
            {
                MessageBox.Show("连接服务器失败...");
            }
        }